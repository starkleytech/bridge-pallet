{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18","program":"/home/masterdubs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tracing_core","--edition=2018","/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=31e967490892bb36","-C","extra-filename=-31e967490892bb36","--out-dir","/home/masterdubs/dev/bridge-pallet/target/rls/debug/deps","-L","dependency=/home/masterdubs/dev/bridge-pallet/target/rls/debug/deps","--extern","lazy_static=/home/masterdubs/dev/bridge-pallet/target/rls/debug/deps/liblazy_static-add60b10b58fc28f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/masterdubs/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/masterdubs/dev/bridge-pallet/target/rls/debug/deps/libtracing_core-31e967490892bb36.rmeta"},"prelude":{"crate_id":{"name":"tracing_core","disambiguator":[18134877117990131191,13686137443987763260]},"crate_root":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src","external_crates":[{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","num":18,"id":{"name":"lazy_static","disambiguator":[10949373214698449189,8475297847177132521]}}],"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":0,"byte_end":8598,"line_start":1,"line_end":279,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":5428},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8147,"byte_end":8151,"line_start":253,"line_end":253,"column_start":23,"column_end":27},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8355,"byte_end":8363,"line_start":267,"line_end":267,"column_start":15,"column_end":23},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8381,"byte_end":8389,"line_start":268,"line_end":268,"column_start":17,"column_end":25},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":658},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8402,"byte_end":8407,"line_start":269,"line_end":269,"column_start":12,"column_end":17},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":666},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8420,"byte_end":8425,"line_start":270,"line_end":270,"column_start":12,"column_end":17},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":907},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8442,"byte_end":8447,"line_start":271,"line_end":271,"column_start":16,"column_end":21},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":922},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8449,"byte_end":8460,"line_start":271,"line_end":271,"column_start":23,"column_end":34},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8462,"byte_end":8470,"line_start":271,"line_end":271,"column_start":36,"column_end":44},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8489,"byte_end":8499,"line_start":272,"line_end":272,"column_start":17,"column_end":27},"alias_span":null,"name":"Subscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8530,"byte_end":8534,"line_start":275,"line_end":275,"column_start":26,"column_end":30},"alias_span":null,"name":"Kind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8548,"byte_end":8556,"line_start":275,"line_end":275,"column_start":44,"column_end":52},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":0,"byte_end":8598,"line_start":1,"line_end":279,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":46},{"krate":0,"index":166},{"krate":0,"index":188},{"krate":0,"index":354},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623}],"decl_id":null,"docs":" Core primitives for `tracing`.","sig":null,"attributes":[{"value":"/ Core primitives for `tracing`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":0,"byte_end":34,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":35,"byte_end":38,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [`tracing`] is a framework for instrumenting Rust programs to collect","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":39,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ structured, event-based diagnostic information. This crate defines the core","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":113,"byte_end":192,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ primitives of `tracing`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":193,"byte_end":221,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":222,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This crate provides:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":226,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":251,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * [`span::Id`] identifies a span within the execution of a program.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":255,"byte_end":326,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":327,"byte_end":330,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * [`Event`] represents a single event within a trace.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":331,"byte_end":388,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":389,"byte_end":392,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Subscriber`], the trait implemented to collect trace data.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":393,"byte_end":459,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":460,"byte_end":463,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * [`Metadata`] and [`Callsite`] provide information describing spans and","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":464,"byte_end":540,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   `Event`s.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":541,"byte_end":556,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":557,"byte_end":560,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * [`Field`], [`FieldSet`], [`Value`], and [`ValueSet`] represent the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":561,"byte_end":633,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/   structured data attached to a span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":634,"byte_end":675,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":676,"byte_end":679,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ * [`Dispatch`] allows spans and events to be dispatched to `Subscriber`s.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":680,"byte_end":757,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":758,"byte_end":761,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ In addition, it defines the global callsite registry and per-thread current","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":762,"byte_end":841,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ dispatcher which other components of the tracing system rely on.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":842,"byte_end":910,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":911,"byte_end":914,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.42+][msrv]*","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":915,"byte_end":969,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":970,"byte_end":973,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":974,"byte_end":1010,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1011,"byte_end":1014,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1015,"byte_end":1027,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1028,"byte_end":1031,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Application authors will typically not use this crate directly. Instead,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1032,"byte_end":1108,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ they will use the [`tracing`] crate, which provides a much more","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1109,"byte_end":1176,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ fully-featured API. However, this crate's API will change very infrequently,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1177,"byte_end":1257,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ so it may be used when dependencies must be very stable.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1258,"byte_end":1318,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `Subscriber` implementations may depend on `tracing-core` rather than","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1323,"byte_end":1396,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ `tracing`, as the additional APIs provided by `tracing` are primarily useful","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1397,"byte_end":1477,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ for instrumenting libraries and applications, and are generally not","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1478,"byte_end":1549,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ necessary for `Subscriber` implementations.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1550,"byte_end":1597,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1598,"byte_end":1601,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The [`tokio-rs/tracing`] repository contains less stable crates designed to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1602,"byte_end":1681,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ be used with the `tracing` ecosystem. It includes a collection of","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1682,"byte_end":1751,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"/ `Subscriber` implementations, as well as utility and adapter crates.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1752,"byte_end":1824,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1825,"byte_end":1828,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Crate Feature Flags","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1829,"byte_end":1856,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1857,"byte_end":1860,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The following crate feature flags are available:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1861,"byte_end":1913,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1914,"byte_end":1917,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ * `std`: Depend on the Rust standard library (enabled by default).","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1918,"byte_end":1988,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1989,"byte_end":1992,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":1993,"byte_end":2071,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2072,"byte_end":2075,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/   ```toml","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2076,"byte_end":2089,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/   [dependencies]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2090,"byte_end":2110,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/   tracing-core = { version = \"0.1.18\", default-features = false }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2111,"byte_end":2180,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/   ```","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2181,"byte_end":2190,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2191,"byte_end":2194,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/   **Note**:`tracing-core`'s `no_std` support requires `liballoc`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2195,"byte_end":2264,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2265,"byte_end":2268,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2269,"byte_end":2299,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2300,"byte_end":2303,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2304,"byte_end":2381,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ version is 1.42. The current Tracing version is not guaranteed to build on","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2382,"byte_end":2460,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2461,"byte_end":2522,"line_start":65,"line_end":65,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2523,"byte_end":2526,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2527,"byte_end":2606,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2607,"byte_end":2684,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2685,"byte_end":2761,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2762,"byte_end":2840,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2841,"byte_end":2916,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2917,"byte_end":2993,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":2994,"byte_end":3041,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3042,"byte_end":3045,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3046,"byte_end":3049,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`span::Id`]: span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3050,"byte_end":3087,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/ [`Event`]: event/struct.Event.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3088,"byte_end":3126,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3127,"byte_end":3179,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/ [`Metadata`]: metadata/struct.Metadata.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3180,"byte_end":3227,"line_start":79,"line_end":79,"column_start":1,"column_end":48}},{"value":"/ [`Callsite`]: callsite/trait.Callsite.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3228,"byte_end":3274,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/ [`Field`]: field/struct.Field.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3275,"byte_end":3313,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/ [`FieldSet`]: field/struct.FieldSet.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3314,"byte_end":3358,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/ [`Value`]: field/trait.Value.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3359,"byte_end":3396,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/ [`ValueSet`]: field/struct.ValueSet.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3397,"byte_end":3441,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ [`Dispatch`]: dispatcher/struct.Dispatch.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3442,"byte_end":3491,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"/ [`tokio-rs/tracing`]: https://github.com/tokio-rs/tracing","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3492,"byte_end":3553,"line_start":86,"line_end":86,"column_start":1,"column_end":62}},{"value":"/ [`tracing`]: https://crates.io/crates/tracing","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3554,"byte_end":3603,"line_start":87,"line_end":87,"column_start":1,"column_end":50}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\n       non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":3967,"byte_end":4429,"line_start":95,"line_end":116,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"callsite","qualname":"::callsite","value":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":1082},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":633},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43}],"decl_id":null,"docs":" Callsites represent the source locations from which spans or events\n originate.\n","sig":null,"attributes":[{"value":"/ Callsites represent the source locations from which spans or events","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":8600,"byte_end":8671,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ originate.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":8672,"byte_end":8686,"line_start":2,"line_end":2,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":10969,"byte_end":10977,"line_start":77,"line_end":77,"column_start":11,"column_end":19},"name":"Callsite","qualname":"::callsite::Callsite","value":"Callsite: Sync","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" Trait implemented by callsites.","sig":null,"attributes":[{"value":"/ Trait implemented by callsites.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":10757,"byte_end":10792,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":10793,"byte_end":10796,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ These functions are only intended to be called by the callsite registry, which","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":10797,"byte_end":10879,"line_start":75,"line_end":75,"column_start":1,"column_end":83}},{"value":"/ correctly handles determining the common interest between all subscribers.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":10880,"byte_end":10958,"line_start":76,"line_end":76,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11107,"byte_end":11119,"line_start":81,"line_end":81,"column_start":8,"column_end":20},"name":"set_interest","qualname":"::callsite::Callsite::set_interest","value":"pub fn set_interest(&Self, Interest)","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Sets the [`Interest`] for this callsite.","sig":null,"attributes":[{"value":"/ Sets the [`Interest`] for this callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":10990,"byte_end":11034,"line_start":78,"line_end":78,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11039,"byte_end":11042,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [`Interest`]: ../subscriber/struct.Interest.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11047,"byte_end":11099,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11278,"byte_end":11286,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"metadata","qualname":"::callsite::Callsite::metadata","value":"pub fn metadata(&Self) -> &Metadata","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns the [metadata] associated with the callsite.","sig":null,"attributes":[{"value":"/ Returns the [metadata] associated with the callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11153,"byte_end":11209,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11214,"byte_end":11217,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11222,"byte_end":11270,"line_start":85,"line_end":85,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":636},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11513,"byte_end":11523,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"Identifier","qualname":"::callsite::Identifier","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uniquely identifies a [`Callsite`]","sig":null,"attributes":[{"value":"/ Uniquely identifies a [`Callsite`]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11315,"byte_end":11353,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11354,"byte_end":11357,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Two `Identifier`s are equal if they both refer to the same callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11358,"byte_end":11430,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11431,"byte_end":11434,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11435,"byte_end":11484,"line_start":93,"line_end":93,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":638},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12136,"byte_end":12161,"line_start":105,"line_end":105,"column_start":5,"column_end":30},"name":"0","qualname":"::callsite::Identifier::0","value":"&'static (dyn callsite::Callsite + 'static)","parent":{"krate":0,"index":636},"children":[],"decl_id":null,"docs":" **Warning**: The fields on this type are currently `pub` because it must\n be able to be constructed statically by macros. However, when `const\n fn`s are available on stable Rust, this will no longer be necessary.\n Thus, these fields are *not* considered stable public API, and they may\n change warning. Do not rely on any fields on `Identifier`. When\n constructing new `Identifier`s, use the `identify_callsite!` macro or\n the `Callsite::id` function instead.\n","sig":null,"attributes":[{"value":"/ **Warning**: The fields on this type are currently `pub` because it must","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11529,"byte_end":11605,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ be able to be constructed statically by macros. However, when `const","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11610,"byte_end":11682,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ fn`s are available on stable Rust, this will no longer be necessary.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11687,"byte_end":11759,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ Thus, these fields are *not* considered stable public API, and they may","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11764,"byte_end":11839,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ change warning. Do not rely on any fields on `Identifier`. When","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11844,"byte_end":11911,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/ constructing new `Identifier`s, use the `identify_callsite!` macro or","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11916,"byte_end":11989,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ the `Callsite::id` function instead.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":11994,"byte_end":12034,"line_start":102,"line_end":102,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13282,"byte_end":13304,"line_start":127,"line_end":127,"column_start":8,"column_end":30},"name":"rebuild_interest_cache","qualname":"::callsite::rebuild_interest_cache","value":"pub fn rebuild_interest_cache()","parent":null,"children":[],"decl_id":null,"docs":" Clear and reregister interest on every [`Callsite`]","sig":null,"attributes":[{"value":"/ Clear and reregister interest on every [`Callsite`]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12167,"byte_end":12222,"line_start":108,"line_end":108,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12223,"byte_end":12226,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is intended for runtime reconfiguration of filters on traces","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12227,"byte_end":12305,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ when the filter recalculation is much less frequent than trace events are.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12306,"byte_end":12384,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ The alternative is to have the [`Subscriber`] that supports runtime","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12385,"byte_end":12456,"line_start":112,"line_end":112,"column_start":1,"column_end":72}},{"value":"/ reconfiguration of filters always return [`Interest::sometimes()`] so that","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12457,"byte_end":12535,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ [`enabled`] is evaluated for every event.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12536,"byte_end":12581,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12582,"byte_end":12585,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will also re-compute the global maximum level as determined by","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12586,"byte_end":12666,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ the [`max_level_hint`] method. If a [`Subscriber`]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12667,"byte_end":12721,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/ implementation changes the value returned by its `max_level_hint`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12722,"byte_end":12791,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/ implementation at runtime, then it **must** call this function after that","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12792,"byte_end":12869,"line_start":119,"line_end":119,"column_start":1,"column_end":78}},{"value":"/ value changes, in order for the change to be reflected.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12870,"byte_end":12929,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12930,"byte_end":12933,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`max_level_hint`]: ../subscriber/trait.Subscriber.html#method.max_level_hint","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":12934,"byte_end":13015,"line_start":122,"line_end":122,"column_start":1,"column_end":82}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13016,"byte_end":13065,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/ [`enabled`]: ../subscriber/trait.Subscriber.html#tymethod.enabled","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13066,"byte_end":13135,"line_start":124,"line_end":124,"column_start":1,"column_end":70}},{"value":"/ [`Interest::sometimes()`]: ../subscriber/struct.Interest.html#method.sometimes","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13136,"byte_end":13218,"line_start":125,"line_end":125,"column_start":1,"column_end":83}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13219,"byte_end":13274,"line_start":126,"line_end":126,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13550,"byte_end":13558,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"register","qualname":"::callsite::register","value":"pub fn register(&'static Callsite)","parent":null,"children":[],"decl_id":null,"docs":" Register a new `Callsite` with the global registry.","sig":null,"attributes":[{"value":"/ Register a new `Callsite` with the global registry.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13394,"byte_end":13449,"line_start":132,"line_end":132,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13450,"byte_end":13453,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This should be called once per callsite after the callsite has been","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13454,"byte_end":13525,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ constructed.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13526,"byte_end":13542,"line_start":135,"line_end":135,"column_start":1,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":46},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatcher","qualname":"::dispatcher","value":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":148},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163}],"decl_id":null,"docs":" Dispatches trace events to [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ Dispatches trace events to [`Subscriber`]s.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14510,"byte_end":14557,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14558,"byte_end":14561,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The _dispatcher_ is the component of the tracing system which is responsible","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14562,"byte_end":14642,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for forwarding trace data from the instrumentation points that generate it","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14643,"byte_end":14721,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to the subscriber that collects it.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14722,"byte_end":14761,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14762,"byte_end":14765,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Using the Trace Dispatcher","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14766,"byte_end":14798,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14799,"byte_end":14802,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Every thread in a program using `tracing` has a _default subscriber_. When","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14803,"byte_end":14881,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ events occur, or spans are created, they are dispatched to the thread's","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14882,"byte_end":14957,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ current subscriber.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14958,"byte_end":14981,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14982,"byte_end":14985,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Setting the Default Subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":14986,"byte_end":15023,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15024,"byte_end":15027,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ By default, the current subscriber is an empty implementation that does","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15028,"byte_end":15103,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ nothing. To use a subscriber implementation, it must be set as the default.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15104,"byte_end":15183,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ There are two methods for doing so: [`with_default`] and","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15184,"byte_end":15244,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ [`set_global_default`]. `with_default` sets the default subscriber for the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15245,"byte_end":15323,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ duration of a scope, while `set_global_default` sets a default subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15324,"byte_end":15401,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ for the entire process.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15402,"byte_end":15429,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15430,"byte_end":15433,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To use either of these functions, we must first wrap our subscriber in a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15434,"byte_end":15510,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ [`Dispatch`], a cloneable, type-erased reference to a subscriber. For","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15511,"byte_end":15584,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15585,"byte_end":15597,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15598,"byte_end":15609,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15610,"byte_end":15641,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15642,"byte_end":15667,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15668,"byte_end":15704,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15705,"byte_end":15743,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15744,"byte_end":15752,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15753,"byte_end":15808,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15809,"byte_end":15877,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15878,"byte_end":15925,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15926,"byte_end":15963,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":15964,"byte_end":16020,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16021,"byte_end":16078,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16079,"byte_end":16113,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16114,"byte_end":16147,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16148,"byte_end":16155,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16156,"byte_end":16219,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/ use dispatcher::Dispatch;","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16220,"byte_end":16249,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16250,"byte_end":16253,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16254,"byte_end":16299,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ let my_dispatch = Dispatch::new(my_subscriber);","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16300,"byte_end":16351,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16352,"byte_end":16359,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ Then, we can use [`with_default`] to set our `Dispatch` as the default for","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16360,"byte_end":16438,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ the duration of a block:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16439,"byte_end":16467,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ ```rust","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16468,"byte_end":16479,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16480,"byte_end":16511,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16512,"byte_end":16537,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16538,"byte_end":16574,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16575,"byte_end":16613,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16614,"byte_end":16622,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16623,"byte_end":16678,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16679,"byte_end":16747,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16748,"byte_end":16795,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16796,"byte_end":16833,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16834,"byte_end":16890,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16891,"byte_end":16948,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16949,"byte_end":16983,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":16984,"byte_end":17017,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17018,"byte_end":17025,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17026,"byte_end":17089,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17090,"byte_end":17137,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17138,"byte_end":17203,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17204,"byte_end":17232,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17233,"byte_end":17236,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17237,"byte_end":17266,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ dispatcher::with_default(&my_dispatch, || {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17267,"byte_end":17314,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/     // my_subscriber is the default","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17315,"byte_end":17354,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17355,"byte_end":17362,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17363,"byte_end":17366,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // no default subscriber again","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17367,"byte_end":17401,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17402,"byte_end":17409,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ It's important to note that `with_default` will not propagate the current","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17410,"byte_end":17487,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ thread's default subscriber to any threads spawned within the `with_default`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17488,"byte_end":17568,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ block. To propagate the default subscriber to new threads, either use","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17569,"byte_end":17642,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ `with_default` from the new thread, or use `set_global_default`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17643,"byte_end":17711,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17712,"byte_end":17715,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As an alternative to `with_default`, we can use [`set_global_default`] to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17716,"byte_end":17793,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ set a `Dispatch` as the default for all threads, for the lifetime of the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17794,"byte_end":17870,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ program. For example:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17871,"byte_end":17896,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17897,"byte_end":17908,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17909,"byte_end":17940,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17941,"byte_end":17966,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":17967,"byte_end":18003,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18004,"byte_end":18042,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18043,"byte_end":18051,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18052,"byte_end":18107,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18108,"byte_end":18176,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18177,"byte_end":18224,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18225,"byte_end":18262,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18263,"byte_end":18319,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18320,"byte_end":18377,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18378,"byte_end":18412,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18413,"byte_end":18446,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18447,"byte_end":18454,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18455,"byte_end":18518,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18519,"byte_end":18566,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18567,"byte_end":18632,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18633,"byte_end":18661,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18662,"byte_end":18665,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ dispatcher::set_global_default(my_dispatch)","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18666,"byte_end":18713,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/     // `set_global_default` will return an error if the global default","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18714,"byte_end":18788,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/     // subscriber has already been set.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18789,"byte_end":18832,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/     .expect(\"global default was already set!\");","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18833,"byte_end":18884,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18885,"byte_end":18888,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `my_subscriber` is now the default","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18889,"byte_end":18930,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18931,"byte_end":18938,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18939,"byte_end":18942,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18943,"byte_end":18972,"line_start":111,"line_end":111,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":18973,"byte_end":19064,"line_start":112,"line_end":112,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19065,"byte_end":19075,"line_start":113,"line_end":113,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19076,"byte_end":19135,"line_start":114,"line_end":114,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19136,"byte_end":19201,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>:the thread-local scoped dispatcher","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19202,"byte_end":19262,"line_start":116,"line_end":116,"column_start":1,"column_end":61}},{"value":"/ (<a href=\"#fn.with_default\"><code>with_default</code></a>) requires the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19263,"byte_end":19338,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ Rust standard library. <code>no_std</code> users should use","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19339,"byte_end":19402,"line_start":118,"line_end":118,"column_start":1,"column_end":64}},{"value":"/ <a href=\"#fn.set_global_default\"><code>set_global_default</code></a>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19403,"byte_end":19475,"line_start":119,"line_end":119,"column_start":1,"column_end":73}},{"value":"/ instead.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19476,"byte_end":19488,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/ </pre></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19489,"byte_end":19505,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19506,"byte_end":19509,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ## Accessing the Default Subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19510,"byte_end":19549,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19550,"byte_end":19553,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ A thread's current default subscriber can be accessed using the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19554,"byte_end":19621,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"/ [`get_default`] function, which executes a closure with a reference to the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19622,"byte_end":19700,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ currently default `Dispatch`. This is used primarily by `tracing`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19701,"byte_end":19770,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"/ instrumentation.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19771,"byte_end":19791,"line_start":128,"line_end":128,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19792,"byte_end":19795,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: struct.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19796,"byte_end":19838,"line_start":130,"line_end":130,"column_start":1,"column_end":43}},{"value":"/ [`with_default`]: fn.with_default.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19839,"byte_end":19881,"line_start":131,"line_end":131,"column_start":1,"column_end":43}},{"value":"/ [`set_global_default`]: fn.set_global_default.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19882,"byte_end":19936,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"/ [`get_default`]: fn.get_default.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19937,"byte_end":19977,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/ [`Dispatch`]: struct.Dispatch.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":19978,"byte_end":20016,"line_start":134,"line_end":134,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":641},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":20479,"byte_end":20487,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"Dispatch","qualname":"::dispatcher::Dispatch","value":"Dispatch {  }","parent":null,"children":[{"krate":0,"index":642}],"decl_id":null,"docs":" `Dispatch` trace data to a [`Subscriber`].","sig":null,"attributes":[{"value":"/ `Dispatch` trace data to a [`Subscriber`].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":20358,"byte_end":20404,"line_start":156,"line_end":156,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":20405,"byte_end":20408,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":20409,"byte_end":20450,"line_start":158,"line_end":158,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":649},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22083,"byte_end":22095,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"DefaultGuard","qualname":"::dispatcher::DefaultGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that resets the current default dispatcher to the prior\n default dispatcher when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that resets the current default dispatcher to the prior","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":21879,"byte_end":21946,"line_start":202,"line_end":202,"column_start":1,"column_end":68}},{"value":"/ default dispatcher when dropped.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":21947,"byte_end":21983,"line_start":203,"line_end":203,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":21984,"byte_end":22007,"line_start":204,"line_end":204,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23026,"byte_end":23038,"line_start":230,"line_end":230,"column_start":8,"column_end":20},"name":"with_default","qualname":"::dispatcher::with_default","value":"pub fn with_default<T, impl FnOnce() -> T: FnOnce() ->\n                    T>(&Dispatch, impl FnOnce() -> T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sets this dispatch as the default for the duration of a closure.","sig":null,"attributes":[{"value":"/ Sets this dispatch as the default for the duration of a closure.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22116,"byte_end":22184,"line_start":209,"line_end":209,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22185,"byte_end":22188,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ The default dispatcher is used when creating a new [span] or","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22189,"byte_end":22253,"line_start":211,"line_end":211,"column_start":1,"column_end":65}},{"value":"/ [`Event`].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22254,"byte_end":22268,"line_start":212,"line_end":212,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22269,"byte_end":22272,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22273,"byte_end":22302,"line_start":214,"line_end":214,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22303,"byte_end":22394,"line_start":215,"line_end":215,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22395,"byte_end":22405,"line_start":216,"line_end":216,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22406,"byte_end":22465,"line_start":217,"line_end":217,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22466,"byte_end":22531,"line_start":218,"line_end":218,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: This function required the Rust standard library.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22532,"byte_end":22608,"line_start":219,"line_end":219,"column_start":1,"column_end":77}},{"value":"/ <code>no_std</code> users should use <a href=\"../fn.set_global_default.html\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22609,"byte_end":22690,"line_start":220,"line_end":220,"column_start":1,"column_end":82}},{"value":"/ <code>set_global_default</code></a> instead.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22691,"byte_end":22739,"line_start":221,"line_end":221,"column_start":1,"column_end":49}},{"value":"/ </pre></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22740,"byte_end":22756,"line_start":222,"line_end":222,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22757,"byte_end":22760,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22761,"byte_end":22791,"line_start":224,"line_end":224,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22792,"byte_end":22847,"line_start":225,"line_end":225,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22848,"byte_end":22889,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ [`set_global_default`]: ../fn.set_global_default.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22890,"byte_end":22947,"line_start":227,"line_end":227,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":22948,"byte_end":22971,"line_start":228,"line_end":228,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":88},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24199,"byte_end":24210,"line_start":256,"line_end":256,"column_start":8,"column_end":19},"name":"set_default","qualname":"::dispatcher::set_default","value":"pub fn set_default(&Dispatch) -> DefaultGuard","parent":null,"children":[],"decl_id":null,"docs":" Sets the dispatch as the default dispatch for the duration of the lifetime\n of the returned DefaultGuard","sig":null,"attributes":[{"value":"/ Sets the dispatch as the default dispatch for the duration of the lifetime","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23396,"byte_end":23474,"line_start":239,"line_end":239,"column_start":1,"column_end":79}},{"value":"/ of the returned DefaultGuard","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23475,"byte_end":23507,"line_start":240,"line_end":240,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23508,"byte_end":23511,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23512,"byte_end":23541,"line_start":242,"line_end":242,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23542,"byte_end":23633,"line_start":243,"line_end":243,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23634,"byte_end":23644,"line_start":244,"line_end":244,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23645,"byte_end":23704,"line_start":245,"line_end":245,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23705,"byte_end":23770,"line_start":246,"line_end":246,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: This function required the Rust standard library.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23771,"byte_end":23847,"line_start":247,"line_end":247,"column_start":1,"column_end":77}},{"value":"/ <code>no_std</code> users should use <a href=\"../fn.set_global_default.html\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23848,"byte_end":23929,"line_start":248,"line_end":248,"column_start":1,"column_end":82}},{"value":"/ <code>set_global_default</code></a> instead.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23930,"byte_end":23978,"line_start":249,"line_end":249,"column_start":1,"column_end":49}},{"value":"/ </pre></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23979,"byte_end":23995,"line_start":250,"line_end":250,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":23996,"byte_end":23999,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ [`set_global_default`]: ../fn.set_global_default.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24000,"byte_end":24057,"line_start":252,"line_end":252,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24058,"byte_end":24081,"line_start":253,"line_end":253,"column_start":1,"column_end":24}},{"value":"must_use = \"Dropping the guard unregisters the dispatcher.\"","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24129,"byte_end":24191,"line_start":255,"line_end":255,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":25532,"byte_end":25550,"line_start":282,"line_end":282,"column_start":8,"column_end":26},"name":"set_global_default","qualname":"::dispatcher::set_global_default","value":"pub fn set_global_default(Dispatch) -> Result<(), SetGlobalDefaultError>","parent":null,"children":[],"decl_id":null,"docs":" Sets this dispatch as the global default for the duration of the entire program.\n Will be used as a fallback if no thread-local dispatch has been set in a thread\n (using `with_default`.)","sig":null,"attributes":[{"value":"/ Sets this dispatch as the global default for the duration of the entire program.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24519,"byte_end":24603,"line_start":263,"line_end":263,"column_start":1,"column_end":85}},{"value":"/ Will be used as a fallback if no thread-local dispatch has been set in a thread","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24604,"byte_end":24687,"line_start":264,"line_end":264,"column_start":1,"column_end":84}},{"value":"/ (using `with_default`.)","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24688,"byte_end":24715,"line_start":265,"line_end":265,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24716,"byte_end":24719,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ Can only be set once; subsequent attempts to set the global default will fail.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24720,"byte_end":24802,"line_start":267,"line_end":267,"column_start":1,"column_end":83}},{"value":"/ Returns `Err` if the global default has already been set.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24803,"byte_end":24864,"line_start":268,"line_end":268,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24865,"byte_end":24868,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24869,"byte_end":24872,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24873,"byte_end":24902,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip compile_fail\" style=\"\">&#x26a0; &#xfe0f;<span class=\"tooltiptext\">Warning</span></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":24903,"byte_end":25017,"line_start":272,"line_end":272,"column_start":1,"column_end":115}},{"value":"/ </div><div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":25018,"byte_end":25150,"line_start":273,"line_end":273,"column_start":1,"column_end":133}},{"value":"/ <strong>Warning</strong>: In general, libraries should <em>not</em> call","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":25151,"byte_end":25227,"line_start":274,"line_end":274,"column_start":1,"column_end":77}},{"value":"/ <code>set_global_default()</code>! Doing so will cause conflicts when","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":25228,"byte_end":25301,"line_start":275,"line_end":275,"column_start":1,"column_end":74}},{"value":"/ executables that depend on the library try to set the default later.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":25302,"byte_end":25374,"line_start":276,"line_end":276,"column_start":1,"column_end":73}},{"value":"/ </pre></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":25375,"byte_end":25391,"line_start":277,"line_end":277,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":25392,"byte_end":25395,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":25396,"byte_end":25426,"line_start":279,"line_end":279,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":25427,"byte_end":25482,"line_start":280,"line_end":280,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":25483,"byte_end":25524,"line_start":281,"line_end":281,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":90},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26465,"byte_end":26477,"line_start":311,"line_end":311,"column_start":8,"column_end":20},"name":"has_been_set","qualname":"::dispatcher::has_been_set","value":"pub fn has_been_set() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a `tracing` dispatcher has ever been set.","sig":null,"attributes":[{"value":"/ Returns true if a `tracing` dispatcher has ever been set.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26239,"byte_end":26300,"line_start":305,"line_end":305,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26301,"byte_end":26304,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ This may be used to completely elide trace points if tracing is not in use","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26305,"byte_end":26383,"line_start":307,"line_end":307,"column_start":1,"column_end":79}},{"value":"/ at all or has yet to be initialized.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26384,"byte_end":26424,"line_start":308,"line_end":308,"column_start":1,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26440,"byte_end":26457,"line_start":310,"line_end":310,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":654},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26609,"byte_end":26630,"line_start":317,"line_end":317,"column_start":12,"column_end":33},"name":"SetGlobalDefaultError","qualname":"::dispatcher::SetGlobalDefaultError","value":"SetGlobalDefaultError {  }","parent":null,"children":[{"krate":0,"index":655}],"decl_id":null,"docs":" Returned if setting the global dispatcher fails.\n","sig":null,"attributes":[{"value":"/ Returned if setting the global dispatcher fails.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26528,"byte_end":26580,"line_start":315,"line_end":315,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27367,"byte_end":27378,"line_start":339,"line_end":339,"column_start":8,"column_end":19},"name":"get_default","qualname":"::dispatcher::get_default","value":"pub fn get_default<T, F>(F) -> T where F: FnMut(&Dispatch) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current [dispatcher].","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current [dispatcher].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26968,"byte_end":27046,"line_start":331,"line_end":331,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27047,"byte_end":27050,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `get_default` should not be nested; if this function is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27051,"byte_end":27129,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/ called while inside of another `get_default`, that closure will be provided","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27130,"byte_end":27209,"line_start":334,"line_end":334,"column_start":1,"column_end":80}},{"value":"/ with `Dispatch::none` rather than the previously set dispatcher.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27210,"byte_end":27278,"line_start":335,"line_end":335,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27279,"byte_end":27282,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"/ [dispatcher]: ../dispatcher/struct.Dispatch.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27283,"byte_end":27335,"line_start":337,"line_end":337,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27336,"byte_end":27359,"line_start":338,"line_end":338,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":28125,"byte_end":28136,"line_start":364,"line_end":364,"column_start":8,"column_end":19},"name":"get_current","qualname":"::dispatcher::get_current","value":"pub fn get_current<T, impl FnOnce(&Dispatch) -> T: FnOnce(&Dispatch) ->\n                   T>(impl FnOnce(&Dispatch) -> T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current [dispatcher].","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current [dispatcher].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27694,"byte_end":27772,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27773,"byte_end":27776,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `get_default` should not be nested; if this function is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27777,"byte_end":27855,"line_start":356,"line_end":356,"column_start":1,"column_end":79}},{"value":"/ called while inside of another `get_default`, that closure will be provided","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27856,"byte_end":27935,"line_start":357,"line_end":357,"column_start":1,"column_end":80}},{"value":"/ with `Dispatch::none` rather than the previously set dispatcher.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":27936,"byte_end":28004,"line_start":358,"line_end":358,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":28005,"byte_end":28008,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ [dispatcher]: ../dispatcher/struct.Dispatch.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":28009,"byte_end":28061,"line_start":360,"line_end":360,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":28062,"byte_end":28085,"line_start":361,"line_end":361,"column_start":1,"column_end":24}},{"value":"inline(never)","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":28101,"byte_end":28117,"line_start":363,"line_end":363,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":29590,"byte_end":29594,"line_start":416,"line_end":416,"column_start":12,"column_end":16},"name":"none","qualname":"<Dispatch>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Dispatch` that discards events and spans.\n","sig":null,"attributes":[{"value":"/ Returns a new `Dispatch` that discards events and spans.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":29504,"byte_end":29564,"line_start":414,"line_end":414,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":29569,"byte_end":29578,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":29842,"byte_end":29845,"line_start":425,"line_end":425,"column_start":12,"column_end":15},"name":"new","qualname":"<Dispatch>::new","value":"pub fn new<S>(S) -> Self where S: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Dispatch` that forwards to the given [`Subscriber`].","sig":null,"attributes":[{"value":"/ Returns a `Dispatch` that forwards to the given [`Subscriber`].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":29695,"byte_end":29762,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":29767,"byte_end":29770,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":29775,"byte_end":29830,"line_start":424,"line_end":424,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":30655,"byte_end":30672,"line_start":449,"line_end":449,"column_start":12,"column_end":29},"name":"register_callsite","qualname":"<Dispatch>::register_callsite","value":"pub fn register_callsite(&Self, &'static Metadata) -> subscriber::Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers a new callsite with this subscriber, returning whether or not\n the subscriber is interested in being notified about the callsite.","sig":null,"attributes":[{"value":"/ Registers a new callsite with this subscriber, returning whether or not","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":30193,"byte_end":30268,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ the subscriber is interested in being notified about the callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":30273,"byte_end":30343,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":30348,"byte_end":30351,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This calls the [`register_callsite`] function on the [`Subscriber`]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":30356,"byte_end":30427,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/ that this `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":30432,"byte_end":30469,"line_start":444,"line_end":444,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":30474,"byte_end":30477,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":30482,"byte_end":30537,"line_start":446,"line_end":446,"column_start":5,"column_end":60}},{"value":"/ [`register_callsite`]: ../subscriber/trait.Subscriber.html#method.register_callsite","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":30542,"byte_end":30629,"line_start":447,"line_end":447,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":30634,"byte_end":30643,"line_start":448,"line_end":448,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31950,"byte_end":31958,"line_start":479,"line_end":479,"column_start":12,"column_end":20},"name":"new_span","qualname":"<Dispatch>::new_span","value":"pub fn new_span(&Self, &span::Attributes) -> span::Id","parent":null,"children":[],"decl_id":null,"docs":" Record the construction of a new span, returning a new [ID] for the\n span being constructed.","sig":null,"attributes":[{"value":"/ Record the construction of a new span, returning a new [ID] for the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31525,"byte_end":31596,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/ span being constructed.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31601,"byte_end":31628,"line_start":470,"line_end":470,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31633,"byte_end":31636,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This calls the [`new_span`] function on the [`Subscriber`] that this","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31641,"byte_end":31713,"line_start":472,"line_end":472,"column_start":5,"column_end":77}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31718,"byte_end":31745,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31750,"byte_end":31753,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ [ID]: ../span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31758,"byte_end":31790,"line_start":475,"line_end":475,"column_start":5,"column_end":37}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31795,"byte_end":31850,"line_start":476,"line_end":476,"column_start":5,"column_end":60}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31855,"byte_end":31924,"line_start":477,"line_end":477,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":31929,"byte_end":31938,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32375,"byte_end":32381,"line_start":491,"line_end":491,"column_start":12,"column_end":18},"name":"record","qualname":"<Dispatch>::record","value":"pub fn record(&Self, &span::Id, &span::Record)","parent":null,"children":[],"decl_id":null,"docs":" Record a set of values on a span.","sig":null,"attributes":[{"value":"/ Record a set of values on a span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32059,"byte_end":32096,"line_start":483,"line_end":483,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32101,"byte_end":32104,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ This calls the [`record`] function on the [`Subscriber`] that this","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32109,"byte_end":32179,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32184,"byte_end":32211,"line_start":486,"line_end":486,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32216,"byte_end":32219,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32224,"byte_end":32279,"line_start":488,"line_end":488,"column_start":5,"column_end":60}},{"value":"/ [`record`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32284,"byte_end":32349,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32354,"byte_end":32363,"line_start":490,"line_end":490,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32896,"byte_end":32915,"line_start":504,"line_end":504,"column_start":12,"column_end":31},"name":"record_follows_from","qualname":"<Dispatch>::record_follows_from","value":"pub fn record_follows_from(&Self, &span::Id, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Adds an indication that `span` follows from the span with the id\n `follows`.","sig":null,"attributes":[{"value":"/ Adds an indication that `span` follows from the span with the id","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32491,"byte_end":32559,"line_start":495,"line_end":495,"column_start":5,"column_end":73}},{"value":"/ `follows`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32564,"byte_end":32578,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32583,"byte_end":32586,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This calls the [`record_follows_from`] function on the [`Subscriber`]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32591,"byte_end":32664,"line_start":498,"line_end":498,"column_start":5,"column_end":78}},{"value":"/ that this `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32669,"byte_end":32706,"line_start":499,"line_end":499,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32711,"byte_end":32714,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32719,"byte_end":32774,"line_start":501,"line_end":501,"column_start":5,"column_end":60}},{"value":"/ [`record_follows_from`]: ../subscriber/trait.Subscriber.html#method.record_follows_from","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32779,"byte_end":32870,"line_start":502,"line_end":502,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":32875,"byte_end":32884,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33450,"byte_end":33457,"line_start":518,"line_end":518,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Dispatch>::enabled","value":"pub fn enabled(&Self, &Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a span with the specified [metadata] would be\n recorded.","sig":null,"attributes":[{"value":"/ Returns true if a span with the specified [metadata] would be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33032,"byte_end":33097,"line_start":508,"line_end":508,"column_start":5,"column_end":70}},{"value":"/ recorded.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33102,"byte_end":33115,"line_start":509,"line_end":509,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33120,"byte_end":33123,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This calls the [`enabled`] function on the [`Subscriber`] that this","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33128,"byte_end":33199,"line_start":511,"line_end":511,"column_start":5,"column_end":76}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33204,"byte_end":33231,"line_start":512,"line_end":512,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33236,"byte_end":33239,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33244,"byte_end":33292,"line_start":514,"line_end":514,"column_start":5,"column_end":53}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33297,"byte_end":33352,"line_start":515,"line_end":515,"column_start":5,"column_end":60}},{"value":"/ [`enabled`]: ../subscriber/trait.Subscriber.html#method.enabled","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33357,"byte_end":33424,"line_start":516,"line_end":516,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33429,"byte_end":33438,"line_start":517,"line_end":517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33918,"byte_end":33923,"line_start":531,"line_end":531,"column_start":12,"column_end":17},"name":"event","qualname":"<Dispatch>::event","value":"pub fn event(&Self, &Event)","parent":null,"children":[],"decl_id":null,"docs":" Records that an [`Event`] has occurred.","sig":null,"attributes":[{"value":"/ Records that an [`Event`] has occurred.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33553,"byte_end":33596,"line_start":522,"line_end":522,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33601,"byte_end":33604,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ This calls the [`event`] function on the [`Subscriber`] that this","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33609,"byte_end":33678,"line_start":524,"line_end":524,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33683,"byte_end":33710,"line_start":525,"line_end":525,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33715,"byte_end":33718,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33723,"byte_end":33764,"line_start":527,"line_end":527,"column_start":5,"column_end":46}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33769,"byte_end":33824,"line_start":528,"line_end":528,"column_start":5,"column_end":60}},{"value":"/ [`event`]: ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33829,"byte_end":33892,"line_start":529,"line_end":529,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":33897,"byte_end":33906,"line_start":530,"line_end":530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34319,"byte_end":34324,"line_start":543,"line_end":543,"column_start":12,"column_end":17},"name":"enter","qualname":"<Dispatch>::enter","value":"pub fn enter(&Self, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Records that a span has been can_enter.","sig":null,"attributes":[{"value":"/ Records that a span has been can_enter.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34000,"byte_end":34043,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34048,"byte_end":34051,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This calls the [`enter`] function on the [`Subscriber`] that this","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34056,"byte_end":34125,"line_start":537,"line_end":537,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34130,"byte_end":34157,"line_start":538,"line_end":538,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34162,"byte_end":34165,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34170,"byte_end":34225,"line_start":540,"line_end":540,"column_start":5,"column_end":60}},{"value":"/ [`enter`]: ../subscriber/trait.Subscriber.html#method.enter","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34230,"byte_end":34293,"line_start":541,"line_end":541,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34298,"byte_end":34307,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34712,"byte_end":34716,"line_start":555,"line_end":555,"column_start":12,"column_end":16},"name":"exit","qualname":"<Dispatch>::exit","value":"pub fn exit(&Self, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Records that a span has been exited.","sig":null,"attributes":[{"value":"/ Records that a span has been exited.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34399,"byte_end":34439,"line_start":547,"line_end":547,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34444,"byte_end":34447,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ This calls the [`exit`] function on the [`Subscriber`] that this","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34452,"byte_end":34520,"line_start":549,"line_end":549,"column_start":5,"column_end":73}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34525,"byte_end":34552,"line_start":550,"line_end":550,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34557,"byte_end":34560,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34565,"byte_end":34620,"line_start":552,"line_end":552,"column_start":5,"column_end":60}},{"value":"/ [`exit`]: ../subscriber/trait.Subscriber.html#method.exit","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34625,"byte_end":34686,"line_start":553,"line_end":553,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34691,"byte_end":34700,"line_start":554,"line_end":554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35522,"byte_end":35532,"line_start":574,"line_end":574,"column_start":12,"column_end":22},"name":"clone_span","qualname":"<Dispatch>::clone_span","value":"pub fn clone_span(&Self, &span::Id) -> span::Id","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been cloned.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been cloned.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34790,"byte_end":34851,"line_start":559,"line_end":559,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34856,"byte_end":34859,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34864,"byte_end":34937,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":34942,"byte_end":35014,"line_start":562,"line_end":562,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35019,"byte_end":35095,"line_start":563,"line_end":563,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35100,"byte_end":35117,"line_start":564,"line_end":564,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35122,"byte_end":35125,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ This calls the [`clone_span`] function on the `Subscriber` that this","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35130,"byte_end":35202,"line_start":566,"line_end":566,"column_start":5,"column_end":77}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35207,"byte_end":35234,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35239,"byte_end":35242,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35247,"byte_end":35284,"line_start":569,"line_end":569,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35289,"byte_end":35344,"line_start":570,"line_end":570,"column_start":5,"column_end":60}},{"value":"/ [`clone_span`]: ../subscriber/trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35349,"byte_end":35422,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35427,"byte_end":35496,"line_start":572,"line_end":572,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35501,"byte_end":35510,"line_start":573,"line_end":573,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37046,"byte_end":37055,"line_start":604,"line_end":604,"column_start":12,"column_end":21},"name":"drop_span","qualname":"<Dispatch>::drop_span","value":"pub fn drop_span(&Self, span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35620,"byte_end":35682,"line_start":578,"line_end":578,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35687,"byte_end":35690,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35695,"byte_end":35768,"line_start":580,"line_end":580,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35773,"byte_end":35845,"line_start":581,"line_end":581,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35850,"byte_end":35926,"line_start":582,"line_end":582,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35931,"byte_end":35948,"line_start":583,"line_end":583,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35953,"byte_end":35956,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ This calls the [`drop_span`] function on the [`Subscriber`] that this","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":35961,"byte_end":36034,"line_start":585,"line_end":585,"column_start":5,"column_end":78}},{"value":"/  `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36039,"byte_end":36067,"line_start":586,"line_end":586,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36072,"byte_end":36075,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36080,"byte_end":36109,"line_start":588,"line_end":588,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip compile_fail\" style=\"\">&#x26a0; &#xfe0f;<span class=\"tooltiptext\">Warning</span></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36114,"byte_end":36228,"line_start":589,"line_end":589,"column_start":5,"column_end":119}},{"value":"/ </div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36233,"byte_end":36243,"line_start":590,"line_end":590,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36248,"byte_end":36374,"line_start":591,"line_end":591,"column_start":5,"column_end":131}},{"value":"/ <strong>Deprecated</strong>: The <a href=\"#method.try_close\"><code>try_close</code></a>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36379,"byte_end":36470,"line_start":592,"line_end":592,"column_start":5,"column_end":96}},{"value":"/ method is functionally identical, but returns <code>true</code> if the span is now closed.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36475,"byte_end":36569,"line_start":593,"line_end":593,"column_start":5,"column_end":99}},{"value":"/ It should be used instead of this method.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36574,"byte_end":36619,"line_start":594,"line_end":594,"column_start":5,"column_end":50}},{"value":"/ </pre></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36624,"byte_end":36640,"line_start":595,"line_end":595,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36645,"byte_end":36648,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36653,"byte_end":36690,"line_start":597,"line_end":597,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36695,"byte_end":36750,"line_start":598,"line_end":598,"column_start":5,"column_end":60}},{"value":"/ [`drop_span`]: ../subscriber/trait.Subscriber.html#method.drop_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36755,"byte_end":36826,"line_start":599,"line_end":599,"column_start":5,"column_end":76}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36831,"byte_end":36900,"line_start":600,"line_end":600,"column_start":5,"column_end":74}},{"value":"/ [`try_close`]: #method.try_close","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36905,"byte_end":36941,"line_start":601,"line_end":601,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36946,"byte_end":36955,"line_start":602,"line_end":602,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.1.2\", note = \"use `Dispatch::try_close` instead\")","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":36960,"byte_end":37034,"line_start":603,"line_end":603,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37965,"byte_end":37974,"line_start":625,"line_end":625,"column_start":12,"column_end":21},"name":"try_close","qualname":"<Dispatch>::try_close","value":"pub fn try_close(&Self, span::Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped, and returns\n `true` if there are now 0 IDs referring to that span.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped, and returns","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37158,"byte_end":37232,"line_start":609,"line_end":609,"column_start":5,"column_end":79}},{"value":"/ `true` if there are now 0 IDs referring to that span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37237,"byte_end":37294,"line_start":610,"line_end":610,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37299,"byte_end":37302,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37307,"byte_end":37380,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37385,"byte_end":37457,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37462,"byte_end":37538,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37543,"byte_end":37560,"line_start":615,"line_end":615,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37565,"byte_end":37568,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ This calls the [`try_close`] function on the [`Subscriber`] that this","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37573,"byte_end":37646,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/  `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37651,"byte_end":37679,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37684,"byte_end":37687,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37692,"byte_end":37729,"line_start":620,"line_end":620,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37734,"byte_end":37789,"line_start":621,"line_end":621,"column_start":5,"column_end":60}},{"value":"/ [`try_close`]: ../subscriber/trait.Subscriber.html#method.try_close","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37794,"byte_end":37865,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37870,"byte_end":37939,"line_start":623,"line_end":623,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":37944,"byte_end":37953,"line_start":624,"line_end":624,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38350,"byte_end":38362,"line_start":636,"line_end":636,"column_start":12,"column_end":24},"name":"current_span","qualname":"<Dispatch>::current_span","value":"pub fn current_span(&Self) -> span::Current","parent":null,"children":[],"decl_id":null,"docs":" Returns a type representing this subscriber's view of the current span.","sig":null,"attributes":[{"value":"/ Returns a type representing this subscriber's view of the current span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38055,"byte_end":38130,"line_start":629,"line_end":629,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38135,"byte_end":38138,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This calls the [`current`] function on the `Subscriber` that this","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38143,"byte_end":38212,"line_start":631,"line_end":631,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38217,"byte_end":38244,"line_start":632,"line_end":632,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38249,"byte_end":38252,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ [`current`]: ../subscriber/trait.Subscriber.html#method.current","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38257,"byte_end":38324,"line_start":634,"line_end":634,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38329,"byte_end":38338,"line_start":635,"line_end":635,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38550,"byte_end":38552,"line_start":643,"line_end":643,"column_start":12,"column_end":14},"name":"is","qualname":"<Dispatch>::is","value":"pub fn is<T: Any>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Dispatch` forwards to a `Subscriber` of type\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Dispatch` forwards to a `Subscriber` of type","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38439,"byte_end":38511,"line_start":640,"line_end":640,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38516,"byte_end":38524,"line_start":641,"line_end":641,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38529,"byte_end":38538,"line_start":642,"line_end":642,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38795,"byte_end":38807,"line_start":650,"line_end":650,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Dispatch>::downcast_ref","value":"pub fn downcast_ref<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to the `Subscriber` this `Dispatch` forwards to\n if it is of type `T`, or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to the `Subscriber` this `Dispatch` forwards to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38642,"byte_end":38716,"line_start":647,"line_end":647,"column_start":5,"column_end":79}},{"value":"/ if it is of type `T`, or `None` if it isn't.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38721,"byte_end":38769,"line_start":648,"line_end":648,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38774,"byte_end":38783,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":166},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":658},{"krate":0,"index":663},{"krate":0,"index":172}],"decl_id":null,"docs":" Events represent single points in time during the execution of a program.\n","sig":null,"attributes":[{"value":"/ Events represent single points in time during the execution of a program.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47298,"byte_end":47375,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48292,"byte_end":48297,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662}],"decl_id":null,"docs":" `Event`s represent single points in time where something occurred during the\n execution of a program.","sig":null,"attributes":[{"value":"/ `Event`s represent single points in time where something occurred during the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47455,"byte_end":47535,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ execution of a program.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47536,"byte_end":47563,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47564,"byte_end":47567,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ An `Event` can be compared to a log record in unstructured logging, but with","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47568,"byte_end":47648,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ two key differences:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47649,"byte_end":47673,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/ - `Event`s exist _within the context of a [span]_. Unlike log lines, they","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47674,"byte_end":47751,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/   may be located within the trace tree, allowing visibility into the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47752,"byte_end":47824,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/   _temporal_ context in which the event occurred, as well as the source","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47825,"byte_end":47900,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   code location.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47901,"byte_end":47921,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ - Like spans, `Event`s have structured key-value data known as _[fields]_,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":47922,"byte_end":48000,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/   which may include textual message. In general, a majority of the data","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48001,"byte_end":48076,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/   associated with an event should be in the event's fields rather than in","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48077,"byte_end":48154,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   the textual message, as the fields are more structured.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48155,"byte_end":48216,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48217,"byte_end":48220,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48221,"byte_end":48240,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [fields]: ../field","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48241,"byte_end":48263,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48571,"byte_end":48579,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<Event>::dispatch","value":"pub fn dispatch(&'static Metadata, &'a field::ValueSet)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Event` with the specified metadata and set of values,\n and observes it with the current subscriber.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Event` with the specified metadata and set of values,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48431,"byte_end":48506,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ and observes it with the current subscriber.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48511,"byte_end":48559,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48939,"byte_end":48942,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"pub fn new(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Event` in the current span, with the specified metadata\n and set of values.\n","sig":null,"attributes":[{"value":"/ Returns a new `Event` in the current span, with the specified metadata","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48812,"byte_end":48886,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ and set of values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48891,"byte_end":48913,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48918,"byte_end":48927,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":49279,"byte_end":49291,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"new_child_of","qualname":"<Event>::new_child_of","value":"pub fn new_child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                             &'static Metadata,\n                                                             &'a field::ValueSet)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Event` as a child of the specified span, with the\n provided metadata and set of values.\n","sig":null,"attributes":[{"value":"/ Returns a new `Event` as a child of the specified span, with the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":49140,"byte_end":49208,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ provided metadata and set of values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":49213,"byte_end":49253,"line_start":51,"line_end":51,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":49258,"byte_end":49267,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":49829,"byte_end":49837,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Event>::child_of","value":"pub fn child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                         &'static Metadata,\n                                                         &'a field::ValueSet)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Event` with the specified metadata and set of values,\n and observes it with the current subscriber and an explicit parent.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Event` with the specified metadata and set of values,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":49666,"byte_end":49741,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ and observes it with the current subscriber and an explicit parent.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":49746,"byte_end":49817,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50298,"byte_end":50304,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"record","qualname":"<Event>::record","value":"pub fn record(&Self, &mut field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Visits all the fields on this `Event` with the specified [visitor].","sig":null,"attributes":[{"value":"/ Visits all the fields on this `Event` with the specified [visitor].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50148,"byte_end":50219,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50224,"byte_end":50227,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50232,"byte_end":50272,"line_start":84,"line_end":84,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50277,"byte_end":50286,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50469,"byte_end":50475,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"fields","qualname":"<Event>::fields","value":"pub fn fields(&Self) -> field::Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the set of values on this `Event`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the set of values on this `Event`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50394,"byte_end":50457,"line_start":90,"line_end":90,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50661,"byte_end":50669,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Event>::metadata","value":"pub fn metadata(&Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns [metadata] describing this `Event`.","sig":null,"attributes":[{"value":"/ Returns [metadata] describing this `Event`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50550,"byte_end":50597,"line_start":95,"line_end":95,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50602,"byte_end":50605,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../struct.Metadata.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50610,"byte_end":50649,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50805,"byte_end":50812,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Event>::is_root","value":"pub fn is_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new event should be a root.\n","sig":null,"attributes":[{"value":"/ Returns true if the new event should be a root.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50742,"byte_end":50793,"line_start":102,"line_end":102,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":51270,"byte_end":51283,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"is_contextual","qualname":"<Event>::is_contextual","value":"pub fn is_contextual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new event's parent should be determined based on the\n current context.","sig":null,"attributes":[{"value":"/ Returns true if the new event's parent should be determined based on the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50885,"byte_end":50961,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ current context.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50966,"byte_end":50986,"line_start":108,"line_end":108,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50991,"byte_end":50994,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If this is true and the current thread is currently inside a span, then","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":50999,"byte_end":51074,"line_start":110,"line_end":110,"column_start":5,"column_end":80}},{"value":"/ that span should be the new event's parent. Otherwise, if the current","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":51079,"byte_end":51152,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ thread is _not_ inside a span, then the new event will be the root of its","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":51157,"byte_end":51234,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ own trace tree.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":51239,"byte_end":51258,"line_start":113,"line_end":113,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":51557,"byte_end":51563,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"parent","qualname":"<Event>::parent","value":"pub fn parent(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns the new event's explicitly-specified parent, if there is one.","sig":null,"attributes":[{"value":"/ Returns the new event's explicitly-specified parent, if there is one.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":51359,"byte_end":51432,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":51437,"byte_end":51440,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Otherwise (if the new event is a root or is a child of the current span),","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":51445,"byte_end":51522,"line_start":120,"line_end":120,"column_start":5,"column_end":82}},{"value":"/ returns false.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":51527,"byte_end":51545,"line_start":121,"line_end":121,"column_start":5,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":1150},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":679},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":206},{"krate":0,"index":213},{"krate":0,"index":686},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":697},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":227},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":320},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":341},{"krate":0,"index":345},{"krate":0,"index":349},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890}],"decl_id":null,"docs":" Span and `Event` key-value data.","sig":null,"attributes":[{"value":"/ Span and `Event` key-value data.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":51706,"byte_end":51742,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":51743,"byte_end":51746,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Spans and events may be annotated with key-value data, referred to as known","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":51747,"byte_end":51826,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ as _fields_. These fields consist of a mapping from a key (corresponding to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":51827,"byte_end":51906,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ a `&str` but represented internally as an array index) to a [`Value`].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":51907,"byte_end":51981,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":51982,"byte_end":51985,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Value`s and `Subscriber`s","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":51986,"byte_end":52018,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52019,"byte_end":52022,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s consume `Value`s as fields attached to [span]s or [`Event`]s.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52023,"byte_end":52102,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ The set of field keys on a given span or is defined on its [`Metadata`].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52103,"byte_end":52179,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ When a span is created, it provides [`Attributes`] to the `Subscriber`'s","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52180,"byte_end":52256,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ [`new_span`] method, containing any fields whose values were provided when","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52257,"byte_end":52335,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ the span was created; and may call the `Subscriber`'s [`record`] method","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52336,"byte_end":52411,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ with additional [`Record`]s if values are added for more of its fields.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52412,"byte_end":52487,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ Similarly, the [`Event`] type passed to the subscriber's [`event`] method","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52488,"byte_end":52565,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ will contain any fields attached to each event.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52566,"byte_end":52617,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52618,"byte_end":52621,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `tracing` represents values as either one of a set of Rust primitives","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52622,"byte_end":52695,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ (`i64`, `u64`, `bool`, and `&str`) or using a `fmt::Display` or `fmt::Debug`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52696,"byte_end":52776,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ implementation. `Subscriber`s are provided these primitive value types as","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52777,"byte_end":52854,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ `dyn Value` trait objects.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52855,"byte_end":52885,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52886,"byte_end":52889,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These trait objects can be formatted using `fmt::Debug`, but may also be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52890,"byte_end":52966,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ recorded as typed data by calling the [`Value::record`] method on these","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":52967,"byte_end":53042,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ trait objects with a _visitor_ implementing the [`Visit`] trait. This trait","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53043,"byte_end":53122,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ represents the behavior used to record values of various types. For example,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53123,"byte_end":53203,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ we might record integers by incrementing counters for their field names,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53204,"byte_end":53280,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ rather than printing them.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53281,"byte_end":53311,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53312,"byte_end":53315,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Value`]: trait.Value.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53316,"byte_end":53347,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ [span]: ../span/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53348,"byte_end":53368,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53369,"byte_end":53410,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ [`Metadata`]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53411,"byte_end":53461,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/ [`Attributes`]:  ../span/struct.Attributes.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53462,"byte_end":53513,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"/ [`Record`]: ../span/struct.Record.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53514,"byte_end":53556,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53557,"byte_end":53626,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ [`record`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53627,"byte_end":53692,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/ [`event`]:  ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53693,"byte_end":53757,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ [`Value::record`]: trait.Value.html#method.record","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53758,"byte_end":53811,"line_start":39,"line_end":39,"column_start":1,"column_end":54}},{"value":"/ [`Visit`]: trait.Visit.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":53812,"byte_end":53843,"line_start":40,"line_end":40,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":666},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54483,"byte_end":54488,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"Field","qualname":"::field::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"decl_id":null,"docs":" An opaque key allowing _O_(1) access to a field in a `Span`'s key-value\n data.","sig":null,"attributes":[{"value":"/ An opaque key allowing _O_(1) access to a field in a `Span`'s key-value","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54000,"byte_end":54075,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ data.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54076,"byte_end":54085,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54086,"byte_end":54089,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ As keys are defined by the _metadata_ of a span, rather than by an","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54090,"byte_end":54160,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/ individual instance of a span, a key may be used to access the same field","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54161,"byte_end":54238,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ across all instances of a given span with the same metadata. Thus, when a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54239,"byte_end":54316,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ subscriber observes a new span, it need only access a field by name _once_,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54317,"byte_end":54396,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ and use the key for that name for all other accesses.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54397,"byte_end":54454,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":671},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54779,"byte_end":54784,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"Empty","qualname":"::field::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty field.","sig":null,"attributes":[{"value":"/ An empty field.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54530,"byte_end":54549,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54550,"byte_end":54553,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This can be used to indicate that the value of a field is not currently","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54554,"byte_end":54629,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ present but will be recorded later.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54630,"byte_end":54669,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54670,"byte_end":54673,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ When a field's value is `Empty`. it will not be recorded.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54674,"byte_end":54735,"line_start":71,"line_end":71,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54842,"byte_end":54850,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"FieldSet","qualname":"::field::FieldSet","value":"FieldSet {  }","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"decl_id":null,"docs":" Describes the fields present on a span.\n","sig":null,"attributes":[{"value":"/ Describes the fields present on a span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":54787,"byte_end":54830,"line_start":75,"line_end":75,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55095,"byte_end":55103,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"ValueSet","qualname":"::field::ValueSet","value":"ValueSet {  }","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"decl_id":null,"docs":" A set of fields and values for a span.\n","sig":null,"attributes":[{"value":"/ A set of fields and values for a span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55041,"byte_end":55083,"line_start":83,"line_end":83,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":681},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55266,"byte_end":55270,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"Iter","qualname":"::field::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683}],"decl_id":null,"docs":" An iterator over a set of fields.\n","sig":null,"attributes":[{"value":"/ An iterator over a set of fields.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55200,"byte_end":55237,"line_start":89,"line_end":89,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":206},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59268,"byte_end":59273,"line_start":189,"line_end":189,"column_start":11,"column_end":16},"name":"Visit","qualname":"::field::Visit","value":"Visit","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"decl_id":null,"docs":" Visits typed values.","sig":null,"attributes":[{"value":"/ Visits typed values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55322,"byte_end":55346,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55347,"byte_end":55350,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ An instance of `Visit` (\"a visitor\") represents the logic necessary to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55351,"byte_end":55425,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ record field values of various types. When an implementor of [`Value`] is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55426,"byte_end":55503,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ [recorded], it calls the appropriate method on the provided visitor to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55504,"byte_end":55578,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ indicate the type that value should be recorded as.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55579,"byte_end":55634,"line_start":101,"line_end":101,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55635,"byte_end":55638,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ When a [`Subscriber`] implementation [records an `Event`] or a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55639,"byte_end":55705,"line_start":103,"line_end":103,"column_start":1,"column_end":67}},{"value":"/ [set of `Value`s added to a `Span`], it can pass an `&mut Visit` to the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55706,"byte_end":55781,"line_start":104,"line_end":104,"column_start":1,"column_end":76}},{"value":"/ `record` method on the provided [`ValueSet`] or [`Event`]. This visitor","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55782,"byte_end":55857,"line_start":105,"line_end":105,"column_start":1,"column_end":76}},{"value":"/ will then be used to record all the field-value pairs present on that","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55858,"byte_end":55931,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ `Event` or `ValueSet`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55932,"byte_end":55958,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55959,"byte_end":55962,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55963,"byte_end":55977,"line_start":109,"line_end":109,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55978,"byte_end":55981,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ A simple visitor that writes to a string might be implemented like so:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":55982,"byte_end":56056,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56057,"byte_end":56064,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ # extern crate tracing_core as tracing;","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56065,"byte_end":56108,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ use std::fmt::{self, Write};","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56109,"byte_end":56141,"line_start":114,"line_end":114,"column_start":1,"column_end":33}},{"value":"/ use tracing::field::{Value, Visit, Field};","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56142,"byte_end":56188,"line_start":115,"line_end":115,"column_start":1,"column_end":47}},{"value":"/ pub struct StringVisitor<'a> {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56189,"byte_end":56223,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/     string: &'a mut String,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56224,"byte_end":56255,"line_start":117,"line_end":117,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56256,"byte_end":56261,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56262,"byte_end":56265,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Visit for StringVisitor<'a> {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56266,"byte_end":56308,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/     fn record_debug(&mut self, field: &Field, value: &fmt::Debug) {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56309,"byte_end":56380,"line_start":121,"line_end":121,"column_start":1,"column_end":72}},{"value":"/         write!(self.string, \"{} = {:?}; \", field.name(), value).unwrap();","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56381,"byte_end":56458,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/     }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56459,"byte_end":56468,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56469,"byte_end":56474,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56475,"byte_end":56482,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ This visitor will format each recorded value using `fmt::Debug`, and","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56483,"byte_end":56555,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/ append the field name and formatted value to the provided string,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56556,"byte_end":56625,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"/ regardless of the type of the recorded value. When all the values have","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56626,"byte_end":56700,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"/ been recorded, the `StringVisitor` may be dropped, allowing the string","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56701,"byte_end":56775,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ to be printed or stored in some other data structure.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56776,"byte_end":56833,"line_start":130,"line_end":130,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56834,"byte_end":56837,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `Visit` trait provides default implementations for `record_i64`,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56838,"byte_end":56910,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/ `record_u64`, `record_bool`, `record_str`, and `record_error`, which simply","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56911,"byte_end":56990,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ forward the recorded value to `record_debug`. Thus, `record_debug` is the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":56991,"byte_end":57068,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"/ only method which a `Visit` implementation *must* implement. However,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57069,"byte_end":57142,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ visitors may override the default implementations of these functions in","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57143,"byte_end":57218,"line_start":136,"line_end":136,"column_start":1,"column_end":76}},{"value":"/ order to implement type-specific behavior.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57219,"byte_end":57265,"line_start":137,"line_end":137,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57266,"byte_end":57269,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Additionally, when a visitor receives a value of a type it does not care","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57270,"byte_end":57346,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"/ about, it is free to ignore those values completely. For example, a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57347,"byte_end":57418,"line_start":140,"line_end":140,"column_start":1,"column_end":72}},{"value":"/ visitor which only records numeric data might look like this:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57419,"byte_end":57484,"line_start":141,"line_end":141,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57485,"byte_end":57488,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57489,"byte_end":57496,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ # extern crate tracing_core as tracing;","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57497,"byte_end":57540,"line_start":144,"line_end":144,"column_start":1,"column_end":44}},{"value":"/ # use std::fmt::{self, Write};","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57541,"byte_end":57575,"line_start":145,"line_end":145,"column_start":1,"column_end":35}},{"value":"/ # use tracing::field::{Value, Visit, Field};","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57576,"byte_end":57624,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/ pub struct SumVisitor {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57625,"byte_end":57652,"line_start":147,"line_end":147,"column_start":1,"column_end":28}},{"value":"/     sum: i64,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57653,"byte_end":57670,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57671,"byte_end":57676,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57677,"byte_end":57680,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ impl Visit for SumVisitor {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57681,"byte_end":57712,"line_start":151,"line_end":151,"column_start":1,"column_end":32}},{"value":"/     fn record_i64(&mut self, _field: &Field, value: i64) {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57713,"byte_end":57775,"line_start":152,"line_end":152,"column_start":1,"column_end":63}},{"value":"/        self.sum += value;","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57776,"byte_end":57805,"line_start":153,"line_end":153,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57806,"byte_end":57815,"line_start":154,"line_end":154,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57816,"byte_end":57819,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/     fn record_u64(&mut self, _field: &Field, value: u64) {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57820,"byte_end":57882,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         self.sum += value as i64;","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57883,"byte_end":57920,"line_start":157,"line_end":157,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57921,"byte_end":57930,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57931,"byte_end":57934,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     fn record_debug(&mut self, _field: &Field, _value: &fmt::Debug) {","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":57935,"byte_end":58008,"line_start":160,"line_end":160,"column_start":1,"column_end":74}},{"value":"/         // Do nothing","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58009,"byte_end":58034,"line_start":161,"line_end":161,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58035,"byte_end":58044,"line_start":162,"line_end":162,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58045,"byte_end":58050,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58051,"byte_end":58058,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58059,"byte_end":58062,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ This visitor (which is probably not particularly useful) keeps a running","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58063,"byte_end":58139,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ sum of all the numeric values it records, and ignores all other values. A","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58140,"byte_end":58217,"line_start":167,"line_end":167,"column_start":1,"column_end":78}},{"value":"/ more practical example of recording typed values is presented in","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58218,"byte_end":58286,"line_start":168,"line_end":168,"column_start":1,"column_end":69}},{"value":"/ `examples/counters.rs`, which demonstrates a very simple metrics system","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58287,"byte_end":58362,"line_start":169,"line_end":169,"column_start":1,"column_end":76}},{"value":"/ implemented using `tracing`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58363,"byte_end":58395,"line_start":170,"line_end":170,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58396,"byte_end":58399,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58400,"byte_end":58429,"line_start":172,"line_end":172,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58430,"byte_end":58521,"line_start":173,"line_end":173,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58522,"byte_end":58532,"line_start":174,"line_end":174,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58533,"byte_end":58592,"line_start":175,"line_end":175,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58593,"byte_end":58658,"line_start":176,"line_end":176,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: The <code>record_error</code> trait method is only","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58659,"byte_end":58736,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ available when the Rust standard library is present, as it requires the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58737,"byte_end":58812,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/ <code>std::error::Error</code> trait.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58813,"byte_end":58854,"line_start":179,"line_end":179,"column_start":1,"column_end":42}},{"value":"/ </pre></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58855,"byte_end":58871,"line_start":180,"line_end":180,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58872,"byte_end":58875,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [`Value`]: trait.Value.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58876,"byte_end":58907,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ [recorded]: trait.Value.html#method.record","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58908,"byte_end":58954,"line_start":183,"line_end":183,"column_start":1,"column_end":47}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":58955,"byte_end":59010,"line_start":184,"line_end":184,"column_start":1,"column_end":56}},{"value":"/ [records an `Event`]: ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59011,"byte_end":59085,"line_start":185,"line_end":185,"column_start":1,"column_end":75}},{"value":"/ [set of `Value`s added to a `Span`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59086,"byte_end":59176,"line_start":186,"line_end":186,"column_start":1,"column_end":91}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59177,"byte_end":59218,"line_start":187,"line_end":187,"column_start":1,"column_end":42}},{"value":"/ [`ValueSet`]: struct.ValueSet.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59219,"byte_end":59257,"line_start":188,"line_end":188,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59328,"byte_end":59338,"line_start":191,"line_end":191,"column_start":8,"column_end":18},"name":"record_i64","qualname":"::field::Visit::record_i64","value":"pub fn record_i64(&mut Self, &Field, i64)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Visit a signed 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit a signed 64-bit integer value.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59280,"byte_end":59320,"line_start":190,"line_end":190,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59482,"byte_end":59492,"line_start":196,"line_end":196,"column_start":8,"column_end":18},"name":"record_u64","qualname":"::field::Visit::record_u64","value":"pub fn record_u64(&mut Self, &Field, u64)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Visit an unsigned 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit an unsigned 64-bit integer value.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59431,"byte_end":59474,"line_start":195,"line_end":195,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59619,"byte_end":59630,"line_start":201,"line_end":201,"column_start":8,"column_end":19},"name":"record_bool","qualname":"::field::Visit::record_bool","value":"pub fn record_bool(&mut Self, &Field, bool)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Visit a boolean value.\n","sig":null,"attributes":[{"value":"/ Visit a boolean value.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59585,"byte_end":59611,"line_start":200,"line_end":200,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59757,"byte_end":59767,"line_start":206,"line_end":206,"column_start":8,"column_end":18},"name":"record_str","qualname":"::field::Visit::record_str","value":"pub fn record_str(&mut Self, &Field, &str)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Visit a string value.\n","sig":null,"attributes":[{"value":"/ Visit a string value.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59724,"byte_end":59749,"line_start":205,"line_end":205,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60393,"byte_end":60405,"line_start":222,"line_end":222,"column_start":8,"column_end":20},"name":"record_error","qualname":"::field::Visit::record_error","value":"pub fn record_error(&mut Self, &Field, &std::error::Error + 'static)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Records a type implementing `Error`.","sig":null,"attributes":[{"value":"/ Records a type implementing `Error`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59861,"byte_end":59901,"line_start":210,"line_end":210,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59906,"byte_end":59909,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59914,"byte_end":59943,"line_start":212,"line_end":212,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":59948,"byte_end":60039,"line_start":213,"line_end":213,"column_start":5,"column_end":94}},{"value":"/ </div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60044,"byte_end":60054,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60059,"byte_end":60118,"line_start":215,"line_end":215,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60123,"byte_end":60188,"line_start":216,"line_end":216,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This is only enabled when the Rust standard library is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60193,"byte_end":60274,"line_start":217,"line_end":217,"column_start":5,"column_end":86}},{"value":"/ present.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60279,"byte_end":60291,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60296,"byte_end":60306,"line_start":219,"line_end":219,"column_start":5,"column_end":15}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60311,"byte_end":60334,"line_start":220,"line_end":220,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60601,"byte_end":60613,"line_start":227,"line_end":227,"column_start":8,"column_end":20},"name":"record_debug","qualname":"::field::Visit::record_debug","value":"pub fn record_debug(&mut Self, &Field, &fmt::Debug)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Visit a value implementing `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ Visit a value implementing `fmt::Debug`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60549,"byte_end":60593,"line_start":226,"line_end":226,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":213},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60945,"byte_end":60950,"line_start":237,"line_end":237,"column_start":11,"column_end":16},"name":"Value","qualname":"::field::Value","value":"Value: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":214}],"decl_id":null,"docs":" A field value of an erased type.","sig":null,"attributes":[{"value":"/ A field value of an erased type.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60668,"byte_end":60704,"line_start":230,"line_end":230,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60705,"byte_end":60708,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ Implementors of `Value` may call the appropriate typed recording methods on","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60709,"byte_end":60788,"line_start":232,"line_end":232,"column_start":1,"column_end":80}},{"value":"/ the [visitor] passed to their `record` method in order to indicate how","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60789,"byte_end":60863,"line_start":233,"line_end":233,"column_start":1,"column_end":75}},{"value":"/ their data should be recorded.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60864,"byte_end":60898,"line_start":234,"line_end":234,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60899,"byte_end":60902,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ [visitor]: trait.Visit.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60903,"byte_end":60934,"line_start":236,"line_end":236,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61035,"byte_end":61041,"line_start":239,"line_end":239,"column_start":8,"column_end":14},"name":"record","qualname":"::field::Value::record","value":"pub fn record(&Self, &Field, &mut Visit)","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Visits this value with the given `Visitor`.\n","sig":null,"attributes":[{"value":"/ Visits this value with the given `Visitor`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60980,"byte_end":61027,"line_start":238,"line_end":238,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61270,"byte_end":61282,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"DisplayValue","qualname":"::field::DisplayValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` which serializes using `fmt::Display`.","sig":null,"attributes":[{"value":"/ A `Value` which serializes using `fmt::Display`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61091,"byte_end":61143,"line_start":242,"line_end":242,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61144,"byte_end":61147,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ Uses `record_debug` in the `Value` implementation to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61148,"byte_end":61204,"line_start":244,"line_end":244,"column_start":1,"column_end":57}},{"value":"/ avoid an unnecessary evaluation.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61205,"byte_end":61241,"line_start":245,"line_end":245,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":693},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61396,"byte_end":61406,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"DebugValue","qualname":"::field::DebugValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` which serializes as a string using `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ A `Value` which serializes as a string using `fmt::Debug`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61305,"byte_end":61367,"line_start":249,"line_end":249,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":215},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61553,"byte_end":61560,"line_start":255,"line_end":255,"column_start":8,"column_end":15},"name":"display","qualname":"::field::display","value":"pub fn display<T>(T) -> DisplayValue<T> where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type implementing `fmt::Display` as a `Value` that can be\n recorded using its `Display` implementation.\n","sig":null,"attributes":[{"value":"/ Wraps a type implementing `fmt::Display` as a `Value` that can be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61427,"byte_end":61496,"line_start":253,"line_end":253,"column_start":1,"column_end":70}},{"value":"/ recorded using its `Display` implementation.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61497,"byte_end":61545,"line_start":254,"line_end":254,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":217},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61763,"byte_end":61768,"line_start":264,"line_end":264,"column_start":8,"column_end":13},"name":"debug","qualname":"::field::debug","value":"pub fn debug<T>(T) -> DebugValue<T> where T: fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type implementing `fmt::Debug` as a `Value` that can be\n recorded using its `Debug` implementation.\n","sig":null,"attributes":[{"value":"/ Wraps a type implementing `fmt::Debug` as a `Value` that can be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61641,"byte_end":61708,"line_start":262,"line_end":262,"column_start":1,"column_end":68}},{"value":"/ recorded using its `Debug` implementation.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61709,"byte_end":61755,"line_start":263,"line_end":263,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69011,"byte_end":69019,"line_start":538,"line_end":538,"column_start":12,"column_end":20},"name":"callsite","qualname":"<Field>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Identifier`] that uniquely identifies the [`Callsite`]\n which defines this field.","sig":null,"attributes":[{"value":"/ Returns an [`Identifier`] that uniquely identifies the [`Callsite`]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68759,"byte_end":68830,"line_start":532,"line_end":532,"column_start":5,"column_end":76}},{"value":"/ which defines this field.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68835,"byte_end":68864,"line_start":533,"line_end":533,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68869,"byte_end":68872,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ [`Identifier`]: ../callsite/struct.Identifier.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68877,"byte_end":68931,"line_start":535,"line_end":535,"column_start":5,"column_end":59}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68936,"byte_end":68985,"line_start":536,"line_end":536,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68990,"byte_end":68999,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69163,"byte_end":69167,"line_start":543,"line_end":543,"column_start":12,"column_end":16},"name":"name","qualname":"<Field>::name","value":"pub fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representing the name of the field.\n","sig":null,"attributes":[{"value":"/ Returns a string representing the name of the field.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69095,"byte_end":69151,"line_start":542,"line_end":542,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":70183,"byte_end":70186,"line_start":594,"line_end":594,"column_start":18,"column_end":21},"name":"new","qualname":"<FieldSet>::new","value":"pub const fn new(&'static [&'static str], callsite::Identifier) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `FieldSet` with the given array of field names and callsite.\n","sig":null,"attributes":[{"value":"/ Constructs a new `FieldSet` with the given array of field names and callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":70084,"byte_end":70165,"line_start":593,"line_end":593,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":70792,"byte_end":70797,"line_start":610,"line_end":610,"column_start":12,"column_end":17},"name":"field","qualname":"<FieldSet>::field","value":"pub fn field<Q: ?Sized>(&Self, &Q) -> Option<Field> where Q: Borrow<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Field`] named `name`, or `None` if no such field exists.","sig":null,"attributes":[{"value":"/ Returns the [`Field`] named `name`, or `None` if no such field exists.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":70658,"byte_end":70732,"line_start":607,"line_end":607,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":70737,"byte_end":70740,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ [`Field`]: ../struct.Field.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":70745,"byte_end":70780,"line_start":609,"line_end":609,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71968,"byte_end":71976,"line_start":638,"line_end":638,"column_start":12,"column_end":20},"name":"contains","qualname":"<FieldSet>::contains","value":"pub fn contains(&Self, &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains the given `field`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains the given `field`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71145,"byte_end":71201,"line_start":624,"line_end":624,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71206,"byte_end":71209,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71214,"byte_end":71243,"line_start":626,"line_end":626,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71248,"byte_end":71339,"line_start":627,"line_end":627,"column_start":5,"column_end":94}},{"value":"/ </div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71344,"byte_end":71354,"line_start":628,"line_end":628,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71359,"byte_end":71418,"line_start":629,"line_end":629,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71423,"byte_end":71488,"line_start":630,"line_end":630,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: If <code>field</code> shares a name with a field","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71493,"byte_end":71568,"line_start":631,"line_end":631,"column_start":5,"column_end":80}},{"value":"/ in this <code>FieldSet</code>, but was created by a <code>FieldSet</code>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71573,"byte_end":71650,"line_start":632,"line_end":632,"column_start":5,"column_end":82}},{"value":"/ with a different callsite, this <code>FieldSet</code> does <em>not</em>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71655,"byte_end":71730,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ contain it. This is so that if two separate span callsites define a field","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71735,"byte_end":71812,"line_start":634,"line_end":634,"column_start":5,"column_end":82}},{"value":"/ named \"foo\", the <code>Field</code> corresponding to \"foo\" for each","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71817,"byte_end":71888,"line_start":635,"line_end":635,"column_start":5,"column_end":76}},{"value":"/ of those callsites are not equivalent.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71893,"byte_end":71935,"line_start":636,"line_end":636,"column_start":5,"column_end":47}},{"value":"/ </pre></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":71940,"byte_end":71956,"line_start":637,"line_end":637,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72162,"byte_end":72166,"line_start":643,"line_end":643,"column_start":12,"column_end":16},"name":"iter","qualname":"<FieldSet>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Field`s in this `FieldSet`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Field`s in this `FieldSet`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72089,"byte_end":72150,"line_start":642,"line_end":642,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72601,"byte_end":72610,"line_start":659,"line_end":659,"column_start":12,"column_end":21},"name":"value_set","qualname":"<FieldSet>::value_set","value":"pub fn value_set<'v, V>(&'v Self, &'v V) -> ValueSet where V: ValidLen","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ValueSet` with entries for this `FieldSet`'s values.","sig":null,"attributes":[{"value":"/ Returns a new `ValueSet` with entries for this `FieldSet`'s values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72396,"byte_end":72467,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72472,"byte_end":72475,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Note that a `ValueSet` may not be constructed with arrays of over 32","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72480,"byte_end":72552,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ elements.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72557,"byte_end":72570,"line_start":657,"line_end":657,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72881,"byte_end":72884,"line_start":671,"line_end":671,"column_start":12,"column_end":15},"name":"len","qualname":"<FieldSet>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields in this `FieldSet`.\n","sig":null,"attributes":[{"value":"/ Returns the number of fields in this `FieldSet`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72803,"byte_end":72855,"line_start":669,"line_end":669,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72860,"byte_end":72869,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":73019,"byte_end":73027,"line_start":677,"line_end":677,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FieldSet>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not this `FieldSet` has fields.\n","sig":null,"attributes":[{"value":"/ Returns whether or not this `FieldSet` has fields.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72939,"byte_end":72993,"line_start":675,"line_end":675,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":72998,"byte_end":73007,"line_start":676,"line_end":676,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":74386,"byte_end":74394,"line_start":733,"line_end":733,"column_start":12,"column_end":20},"name":"callsite","qualname":"<ValueSet>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Identifier`] that uniquely identifies the [`Callsite`]\n defining the fields this `ValueSet` refers to.","sig":null,"attributes":[{"value":"/ Returns an [`Identifier`] that uniquely identifies the [`Callsite`]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":74113,"byte_end":74184,"line_start":727,"line_end":727,"column_start":5,"column_end":76}},{"value":"/ defining the fields this `ValueSet` refers to.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":74189,"byte_end":74239,"line_start":728,"line_end":728,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":74244,"byte_end":74247,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ [`Identifier`]: ../callsite/struct.Identifier.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":74252,"byte_end":74306,"line_start":730,"line_end":730,"column_start":5,"column_end":59}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":74311,"byte_end":74360,"line_start":731,"line_end":731,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":74365,"byte_end":74374,"line_start":732,"line_end":732,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":351},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76919,"byte_end":76927,"line_start":815,"line_end":815,"column_start":15,"column_end":23},"name":"ValidLen","qualname":"::field::private::ValidLen","value":"ValidLen<'a>: Borrow<[(&'a Field, Option<&'a Value + 'a>)]>","parent":null,"children":[],"decl_id":null,"docs":" Marker trait implemented by arrays which are of valid length to\n construct a `ValueSet`.","sig":null,"attributes":[{"value":"/ Marker trait implemented by arrays which are of valid length to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76480,"byte_end":76547,"line_start":808,"line_end":808,"column_start":5,"column_end":72}},{"value":"/ construct a `ValueSet`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76552,"byte_end":76579,"line_start":809,"line_end":809,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76584,"byte_end":76587,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ `ValueSet`s may only be constructed from arrays containing 32 or fewer","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76592,"byte_end":76666,"line_start":811,"line_end":811,"column_start":5,"column_end":79}},{"value":"/ elements, to ensure the array is small enough to always be allocated on the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76671,"byte_end":76750,"line_start":812,"line_end":812,"column_start":5,"column_end":84}},{"value":"/ stack. This trait is only implemented by arrays of an appropriate length,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76755,"byte_end":76832,"line_start":813,"line_end":813,"column_start":5,"column_end":82}},{"value":"/ ensuring that the correct size arrays are used at compile-time.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76837,"byte_end":76904,"line_start":814,"line_end":814,"column_start":5,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":354},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":893},{"krate":0,"index":905},{"krate":0,"index":903},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":907},{"krate":0,"index":921},{"krate":0,"index":919},{"krate":0,"index":917},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":922},{"krate":0,"index":934},{"krate":0,"index":932},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":935},{"krate":0,"index":940},{"krate":0,"index":938},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":389},{"krate":0,"index":942},{"krate":0,"index":955},{"krate":0,"index":953},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":392},{"krate":0,"index":397},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":957},{"krate":0,"index":986},{"krate":0,"index":984},{"krate":0,"index":982},{"krate":0,"index":979},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":987},{"krate":0,"index":989},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":474},{"krate":0,"index":476}],"decl_id":null,"docs":" Metadata describing trace data.\n","sig":null,"attributes":[{"value":"/ Metadata describing trace data.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82137,"byte_end":82172,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84770,"byte_end":84778,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::metadata::Metadata","value":"Metadata {  }","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" Metadata describing a [span] or [event].","sig":null,"attributes":[{"value":"/ Metadata describing a [span] or [event].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82303,"byte_end":82347,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82348,"byte_end":82351,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All spans and events have the following metadata:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82352,"byte_end":82405,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ - A [name], represented as a static string.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82406,"byte_end":82453,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/ - A [target], a string that categorizes part of the system where the span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82454,"byte_end":82531,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   or event occurred. The `tracing` macros default to using the module","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82532,"byte_end":82605,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/   path where the span or event originated as the target, but it may be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82606,"byte_end":82680,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/   overridden.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82681,"byte_end":82698,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ - A [verbosity level].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82699,"byte_end":82725,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ - The names of the [fields] defined by the span or event.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82726,"byte_end":82787,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/ - Whether the metadata corresponds to a span or event.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82788,"byte_end":82846,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82847,"byte_end":82850,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In addition, the following optional metadata describing the source code","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82851,"byte_end":82926,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ location where the span or event originated _may_ be provided:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82927,"byte_end":82993,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ - The [file name]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":82994,"byte_end":83015,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/ - The [line number]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83016,"byte_end":83039,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ - The [module path]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83040,"byte_end":83063,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83064,"byte_end":83067,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Metadata is used by [`Subscriber`]s when filtering spans and events, and it","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83068,"byte_end":83147,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ may also be used as part of their data payload.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83148,"byte_end":83199,"line_start":28,"line_end":28,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83200,"byte_end":83203,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When created by the `event!` or `span!` macro, the metadata describing a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83204,"byte_end":83280,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ particular event or span is constructed statically and exists as a single","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83281,"byte_end":83358,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ static instance. Thus, the overhead of creating the metadata is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83359,"byte_end":83426,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ _significantly_ lower than that of creating the actual span. Therefore,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83427,"byte_end":83502,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ filtering is based on metadata, rather than on the constructed span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83503,"byte_end":83575,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83576,"byte_end":83579,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83580,"byte_end":83609,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83610,"byte_end":83701,"line_start":37,"line_end":37,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83702,"byte_end":83712,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83713,"byte_end":83772,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83773,"byte_end":83838,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Although instances of <code>Metadata</code> cannot","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83839,"byte_end":83916,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ be compared directly, they provide a method <a href=\"struct.Metadata.html#method.id\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":83917,"byte_end":84006,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ <code>id</code></a>, returning an opaque <a href=\"../callsite/struct.Identifier.html\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84007,"byte_end":84097,"line_start":43,"line_end":43,"column_start":1,"column_end":91}},{"value":"/ callsite identifier</a>  which uniquely identifies the callsite where the metadata","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84098,"byte_end":84184,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ originated. This can be used to determine if two <code>Metadata</code> correspond to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84185,"byte_end":84273,"line_start":45,"line_end":45,"column_start":1,"column_end":89}},{"value":"/ the same callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84274,"byte_end":84296,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ </pre></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84297,"byte_end":84313,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84314,"byte_end":84317,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84318,"byte_end":84348,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/ [event]: ../event/index.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84349,"byte_end":84381,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ [name]: #method.name","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84382,"byte_end":84406,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ [target]: #method.target","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84407,"byte_end":84435,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ [fields]: #method.fields","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84436,"byte_end":84464,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/ [verbosity level]: #method.level","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84465,"byte_end":84501,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ [file name]: #method.file","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84502,"byte_end":84531,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"/ [line number]: #method.line","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84532,"byte_end":84563,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ [module path]: #method.module","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84564,"byte_end":84597,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84598,"byte_end":84653,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/ [`id`]: struct.Metadata.html#method.id","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84654,"byte_end":84696,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/ [callsite identifier]: ../callsite/struct.Identifier.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":84697,"byte_end":84758,"line_start":60,"line_end":60,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":893},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":85776,"byte_end":85780,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"Kind","qualname":"::metadata::Kind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the callsite is a span or event.\n","sig":null,"attributes":[{"value":"/ Indicates whether the callsite is a span or event.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":85671,"byte_end":85725,"line_start":92,"line_end":92,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":907},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":85907,"byte_end":85912,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"Level","qualname":"::metadata::Level","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the level of verbosity of a span or event.\n","sig":null,"attributes":[{"value":"/ Describes the level of verbosity of a span or event.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":85794,"byte_end":85850,"line_start":96,"line_end":96,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86388,"byte_end":86399,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"LevelFilter","qualname":"::metadata::LevelFilter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter comparable to a verbosity `Level`.","sig":null,"attributes":[{"value":"/ A filter comparable to a verbosity `Level`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":85927,"byte_end":85974,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":85975,"byte_end":85978,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ If a `Level` is considered less than a `LevelFilter`, it should be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":85979,"byte_end":86049,"line_start":102,"line_end":102,"column_start":1,"column_end":71}},{"value":"/ considered disabled; if greater than or equal to the `LevelFilter`, that","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86050,"byte_end":86126,"line_start":103,"line_end":103,"column_start":1,"column_end":77}},{"value":"/ level is enabled.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86127,"byte_end":86148,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86149,"byte_end":86152,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Note that this is essentially identical to the `Level` type, but with the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86153,"byte_end":86230,"line_start":106,"line_end":106,"column_start":1,"column_end":78}},{"value":"/ addition of an `OFF` level that completely disables all trace","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86231,"byte_end":86296,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/ instrumentation.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86297,"byte_end":86317,"line_start":108,"line_end":108,"column_start":1,"column_end":21}},{"value":"repr(transparent)","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86318,"byte_end":86338,"line_start":109,"line_end":109,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":935},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86518,"byte_end":86539,"line_start":115,"line_end":115,"column_start":12,"column_end":33},"name":"ParseLevelFilterError","qualname":"::metadata::ParseLevelFilterError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates that a string could not be parsed to a valid level.\n","sig":null,"attributes":[{"value":"/ Indicates that a string could not be parsed to a valid level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86417,"byte_end":86482,"line_start":113,"line_end":113,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86828,"byte_end":86831,"line_start":124,"line_end":124,"column_start":18,"column_end":21},"name":"new","qualname":"<Metadata>::new","value":"pub const fn new(&'static str, &'a str, Level, Option<&'a str>, Option<u32>,\n                 Option<&'a str>, field::FieldSet, Kind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct new metadata for a span or event, with a name, target, level, field\n names, and optional source code location.\n","sig":null,"attributes":[{"value":"/ Construct new metadata for a span or event, with a name, target, level, field","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86679,"byte_end":86760,"line_start":122,"line_end":122,"column_start":5,"column_end":86}},{"value":"/ names, and optional source code location.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86765,"byte_end":86810,"line_start":123,"line_end":123,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87348,"byte_end":87354,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"fields","qualname":"<Metadata>::fields","value":"pub fn fields(&Self) -> &field::FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns the names of the fields on the described span or event.\n","sig":null,"attributes":[{"value":"/ Returns the names of the fields on the described span or event.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87269,"byte_end":87336,"line_start":146,"line_end":146,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87494,"byte_end":87499,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"level","qualname":"<Metadata>::level","value":"pub fn level(&Self) -> &Level","parent":null,"children":[],"decl_id":null,"docs":" Returns the level of verbosity of the described span or event.\n","sig":null,"attributes":[{"value":"/ Returns the level of verbosity of the described span or event.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87416,"byte_end":87482,"line_start":151,"line_end":151,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87595,"byte_end":87599,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"name","qualname":"<Metadata>::name","value":"pub fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the span.\n","sig":null,"attributes":[{"value":"/ Returns the name of the span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87550,"byte_end":87583,"line_start":156,"line_end":156,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87922,"byte_end":87928,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"target","qualname":"<Metadata>::target","value":"pub fn target(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string describing the part of the system where the span or\n event that this metadata describes occurred.","sig":null,"attributes":[{"value":"/ Returns a string describing the part of the system where the span or","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87654,"byte_end":87726,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ event that this metadata describes occurred.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87731,"byte_end":87779,"line_start":162,"line_end":162,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87784,"byte_end":87787,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Typically, this is the module path, but alternate targets may be set","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87792,"byte_end":87864,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ when spans or events are constructed.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87869,"byte_end":87910,"line_start":165,"line_end":165,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88105,"byte_end":88116,"line_start":172,"line_end":172,"column_start":12,"column_end":23},"name":"module_path","qualname":"<Metadata>::module_path","value":"pub fn module_path(&Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the Rust module where the span occurred, or\n `None` if the module path is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the path to the Rust module where the span occurred, or","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":87980,"byte_end":88047,"line_start":170,"line_end":170,"column_start":5,"column_end":72}},{"value":"/ `None` if the module path is unknown.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88052,"byte_end":88093,"line_start":171,"line_end":171,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88303,"byte_end":88307,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"file","qualname":"<Metadata>::file","value":"pub fn file(&Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the source code file where the span\n occurred, or `None` if the file is unknown\n","sig":null,"attributes":[{"value":"/ Returns the name of the source code file where the span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88181,"byte_end":88240,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/ occurred, or `None` if the file is unknown","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88245,"byte_end":88291,"line_start":177,"line_end":177,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88502,"byte_end":88506,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"line","qualname":"<Metadata>::line","value":"pub fn line(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the line number in the source code file where the span\n occurred, or `None` if the line number is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the line number in the source code file where the span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88365,"byte_end":88431,"line_start":182,"line_end":182,"column_start":5,"column_end":71}},{"value":"/ occurred, or `None` if the line number is unknown.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88436,"byte_end":88490,"line_start":183,"line_end":183,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88699,"byte_end":88707,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"callsite","qualname":"<Metadata>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an opaque `Identifier` that uniquely identifies the callsite\n this `Metadata` originated from.\n","sig":null,"attributes":[{"value":"/ Returns an opaque `Identifier` that uniquely identifies the callsite","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88560,"byte_end":88632,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ this `Metadata` originated from.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88637,"byte_end":88673,"line_start":189,"line_end":189,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88678,"byte_end":88687,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88844,"byte_end":88852,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"is_event","qualname":"<Metadata>::is_event","value":"pub fn is_event(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the callsite kind is `Event`.\n","sig":null,"attributes":[{"value":"/ Returns true if the callsite kind is `Event`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88783,"byte_end":88832,"line_start":195,"line_end":195,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88969,"byte_end":88976,"line_start":201,"line_end":201,"column_start":12,"column_end":19},"name":"is_span","qualname":"<Metadata>::is_span","value":"pub fn is_span(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Span`.\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Span`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":88910,"byte_end":88957,"line_start":200,"line_end":200,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":393},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90254,"byte_end":90259,"line_start":247,"line_end":247,"column_start":15,"column_end":20},"name":"EVENT","qualname":"::metadata::Kind::EVENT","value":"Kind","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" `Event` callsite\n","sig":null,"attributes":[{"value":"/ `Event` callsite","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90219,"byte_end":90239,"line_start":246,"line_end":246,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":394},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90331,"byte_end":90335,"line_start":250,"line_end":250,"column_start":15,"column_end":19},"name":"SPAN","qualname":"::metadata::Kind::SPAN","value":"Kind","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" `Span` callsite\n","sig":null,"attributes":[{"value":"/ `Span` callsite","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90297,"byte_end":90316,"line_start":249,"line_end":249,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90430,"byte_end":90437,"line_start":253,"line_end":253,"column_start":12,"column_end":19},"name":"is_span","qualname":"<Kind>::is_span","value":"pub fn is_span(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Span`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Span`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90372,"byte_end":90418,"line_start":252,"line_end":252,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90571,"byte_end":90579,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"is_event","qualname":"<Kind>::is_event","value":"pub fn is_event(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Event`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Event`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90512,"byte_end":90559,"line_start":257,"line_end":257,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":398},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90782,"byte_end":90787,"line_start":269,"line_end":269,"column_start":15,"column_end":20},"name":"ERROR","qualname":"::metadata::Level::ERROR","value":"Level","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90697,"byte_end":90719,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90724,"byte_end":90727,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90732,"byte_end":90767,"line_start":268,"line_end":268,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":399},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90912,"byte_end":90916,"line_start":273,"line_end":273,"column_start":15,"column_end":19},"name":"WARN","qualname":"::metadata::Level::WARN","value":"Level","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90827,"byte_end":90848,"line_start":270,"line_end":270,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90853,"byte_end":90856,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90861,"byte_end":90897,"line_start":272,"line_end":272,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":400},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91038,"byte_end":91042,"line_start":277,"line_end":277,"column_start":15,"column_end":19},"name":"INFO","qualname":"::metadata::Level::INFO","value":"Level","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90955,"byte_end":90976,"line_start":274,"line_end":274,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90981,"byte_end":90984,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90989,"byte_end":91023,"line_start":276,"line_end":276,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":401},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91173,"byte_end":91178,"line_start":281,"line_end":281,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::metadata::Level::DEBUG","value":"Level","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91081,"byte_end":91103,"line_start":278,"line_end":278,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91108,"byte_end":91111,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91116,"byte_end":91158,"line_start":280,"line_end":280,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":402},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91339,"byte_end":91344,"line_start":285,"line_end":285,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::metadata::Level::TRACE","value":"Level","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91218,"byte_end":91240,"line_start":282,"line_end":282,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91245,"byte_end":91248,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91253,"byte_end":91324,"line_start":284,"line_end":284,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":419},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93980,"byte_end":93983,"line_start":380,"line_end":380,"column_start":15,"column_end":18},"name":"OFF","qualname":"::metadata::LevelFilter::OFF","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"off\" level.","sig":null,"attributes":[{"value":"/ The \"off\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93860,"byte_end":93880,"line_start":377,"line_end":377,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93885,"byte_end":93888,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Designates that trace instrumentation should be completely disabled.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93893,"byte_end":93965,"line_start":379,"line_end":379,"column_start":5,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":420},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94107,"byte_end":94112,"line_start":384,"line_end":384,"column_start":15,"column_end":20},"name":"ERROR","qualname":"::metadata::LevelFilter::ERROR","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94022,"byte_end":94044,"line_start":381,"line_end":381,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94049,"byte_end":94052,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94057,"byte_end":94092,"line_start":383,"line_end":383,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":421},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94256,"byte_end":94260,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"name":"WARN","qualname":"::metadata::LevelFilter::WARN","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94171,"byte_end":94192,"line_start":385,"line_end":385,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94197,"byte_end":94200,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94205,"byte_end":94241,"line_start":387,"line_end":387,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":422},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94401,"byte_end":94405,"line_start":392,"line_end":392,"column_start":15,"column_end":19},"name":"INFO","qualname":"::metadata::LevelFilter::INFO","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94318,"byte_end":94339,"line_start":389,"line_end":389,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94344,"byte_end":94347,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94352,"byte_end":94386,"line_start":391,"line_end":391,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":423},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94555,"byte_end":94560,"line_start":396,"line_end":396,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::metadata::LevelFilter::DEBUG","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94463,"byte_end":94485,"line_start":393,"line_end":393,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94490,"byte_end":94493,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94498,"byte_end":94540,"line_start":395,"line_end":395,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":424},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94740,"byte_end":94745,"line_start":400,"line_end":400,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::metadata::LevelFilter::TRACE","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94619,"byte_end":94641,"line_start":397,"line_end":397,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94646,"byte_end":94649,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94654,"byte_end":94725,"line_start":399,"line_end":399,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94926,"byte_end":94936,"line_start":404,"line_end":404,"column_start":18,"column_end":28},"name":"from_level","qualname":"<LevelFilter>::from_level","value":"pub const fn from_level(Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LevelFilter` that enables spans and events with verbosity up\n to and including `level`.\n","sig":null,"attributes":[{"value":"/ Returns a `LevelFilter` that enables spans and events with verbosity up","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94799,"byte_end":94874,"line_start":402,"line_end":402,"column_start":5,"column_end":80}},{"value":"/ to and including `level`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94879,"byte_end":94908,"line_start":403,"line_end":403,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":95205,"byte_end":95215,"line_start":413,"line_end":413,"column_start":18,"column_end":28},"name":"into_level","qualname":"<LevelFilter>::into_level","value":"pub const fn into_level(Self) -> Option<Level>","parent":null,"children":[],"decl_id":null,"docs":" Returns the most verbose [`Level`] that this filter accepts, or `None`\n if it is [`OFF`].","sig":null,"attributes":[{"value":"/ Returns the most verbose [`Level`] that this filter accepts, or `None`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":94998,"byte_end":95072,"line_start":408,"line_end":408,"column_start":5,"column_end":79}},{"value":"/ if it is [`OFF`].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":95077,"byte_end":95098,"line_start":409,"line_end":409,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":95103,"byte_end":95106,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: ../struct.Level.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":95111,"byte_end":95146,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/ [`OFF`]: #associatedconstant.OFF","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":95151,"byte_end":95187,"line_start":412,"line_end":412,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96946,"byte_end":96953,"line_start":448,"line_end":448,"column_start":12,"column_end":19},"name":"current","qualname":"<LevelFilter>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LevelFilter` that matches the most verbose [`Level`] that any\n currently active [`Subscriber`] will enable.","sig":null,"attributes":[{"value":"/ Returns a `LevelFilter` that matches the most verbose [`Level`] that any","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96066,"byte_end":96142,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ currently active [`Subscriber`] will enable.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96147,"byte_end":96195,"line_start":432,"line_end":432,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96200,"byte_end":96203,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ User code should treat this as a *hint*. If a given span or event has a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96208,"byte_end":96283,"line_start":434,"line_end":434,"column_start":5,"column_end":80}},{"value":"/ level *higher* than the returned `LevelFilter`, it will not be enabled.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96288,"byte_end":96363,"line_start":435,"line_end":435,"column_start":5,"column_end":80}},{"value":"/ However, if the level is less than or equal to this value, the span or","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96368,"byte_end":96442,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ event is *not* guaranteed to be enabled; the subscriber will still","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96447,"byte_end":96517,"line_start":437,"line_end":437,"column_start":5,"column_end":75}},{"value":"/ filter each callsite individually.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96522,"byte_end":96560,"line_start":438,"line_end":438,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96565,"byte_end":96568,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Therefore, comparing a given span or event's level to the returned","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96573,"byte_end":96643,"line_start":440,"line_end":440,"column_start":5,"column_end":75}},{"value":"/ `LevelFilter` **can** be used for determining if something is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96648,"byte_end":96713,"line_start":441,"line_end":441,"column_start":5,"column_end":70}},{"value":"/ *disabled*, but **should not** be used for determining if something is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96718,"byte_end":96792,"line_start":442,"line_end":442,"column_start":5,"column_end":79}},{"value":"/ *enabled*.`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96797,"byte_end":96812,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96817,"byte_end":96820,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: ../struct.Level.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96825,"byte_end":96860,"line_start":445,"line_end":445,"column_start":5,"column_end":40}},{"value":"/ [`Subscriber`]: ../../trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96865,"byte_end":96912,"line_start":446,"line_end":446,"column_start":5,"column_end":52}},{"value":"inline(always)","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":96917,"byte_end":96934,"line_start":447,"line_end":447,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":987},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":101657,"byte_end":101672,"line_start":557,"line_end":557,"column_start":12,"column_end":27},"name":"ParseLevelError","qualname":"::metadata::ParseLevelError","value":"ParseLevelError {  }","parent":null,"children":[{"krate":0,"index":988}],"decl_id":null,"docs":" Returned if parsing a `Level` fails.\n","sig":null,"attributes":[{"value":"/ Returned if parsing a `Level` fails.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":101588,"byte_end":101628,"line_start":555,"line_end":555,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":484},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::span","value":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":1001},{"krate":0,"index":1016},{"krate":0,"index":1014},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1004},{"krate":0,"index":1018},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1044},{"krate":0,"index":491},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":513},{"krate":0,"index":519},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":535}],"decl_id":null,"docs":" Spans represent periods of time in the execution of a program.\n","sig":null,"attributes":[{"value":"/ Spans represent periods of time in the execution of a program.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":112976,"byte_end":113042,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1001},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113611,"byte_end":113613,"line_start":16,"line_end":16,"column_start":12,"column_end":14},"name":"Id","qualname":"::span::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifies a span within the context of a subscriber.","sig":null,"attributes":[{"value":"/ Identifies a span within the context of a subscriber.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113165,"byte_end":113222,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113223,"byte_end":113226,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ They are generated by [`Subscriber`]s for each span as it is created, by","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113227,"byte_end":113303,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ the [`new_span`] trait method. See the documentation for that method for","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113304,"byte_end":113380,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ more information on span ID generation.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113381,"byte_end":113424,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113425,"byte_end":113428,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113429,"byte_end":113484,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113485,"byte_end":113554,"line_start":14,"line_end":14,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1018},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113744,"byte_end":113754,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::span::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022}],"decl_id":null,"docs":" Attributes provided to a `Subscriber` describing a new span when it is\n created.\n","sig":null,"attributes":[{"value":"/ Attributes provided to a `Subscriber` describing a new span when it is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113628,"byte_end":113702,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ created.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113703,"byte_end":113715,"line_start":19,"line_end":19,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1026},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113931,"byte_end":113937,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Record","qualname":"::span::Record","value":"Record {  }","parent":null,"children":[{"krate":0,"index":1028}],"decl_id":null,"docs":" A set of fields recorded by a span.\n","sig":null,"attributes":[{"value":"/ A set of fields recorded by a span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113863,"byte_end":113902,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1032},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114575,"byte_end":114582,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Current","qualname":"::span::Current","value":"Current {  }","parent":null,"children":[{"krate":0,"index":1033}],"decl_id":null,"docs":" Indicates what [the `Subscriber` considers] the \"current\" span.","sig":null,"attributes":[{"value":"/ Indicates what [the `Subscriber` considers] the \"current\" span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":113984,"byte_end":114051,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114052,"byte_end":114055,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ As subscribers may not track a notion of a current span, this has three","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114056,"byte_end":114131,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ possible states:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114132,"byte_end":114152,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/ - \"unknown\", indicating that the subscriber does not track a current span,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114153,"byte_end":114231,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ - \"none\", indicating that the current context is known to not be in a span,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114232,"byte_end":114311,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ - \"some\", with the current span's [`Id`] and [`Metadata`].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114312,"byte_end":114374,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114375,"byte_end":114378,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [the `Subscriber` considers]: ../subscriber/trait.Subscriber.html#method.current_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114379,"byte_end":114468,"line_start":41,"line_end":41,"column_start":1,"column_end":90}},{"value":"/ [`Id`]: struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114469,"byte_end":114495,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ [`Metadata`]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114496,"byte_end":114546,"line_start":43,"line_end":43,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115289,"byte_end":115297,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Id>::from_u64","value":"pub fn from_u64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span ID from the given `u64`.","sig":null,"attributes":[{"value":"/ Constructs a new span ID from the given `u64`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114799,"byte_end":114849,"line_start":62,"line_end":62,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114854,"byte_end":114857,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114862,"byte_end":114891,"line_start":64,"line_end":64,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114896,"byte_end":114987,"line_start":65,"line_end":65,"column_start":5,"column_end":94}},{"value":"/ </div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114992,"byte_end":115002,"line_start":66,"line_end":66,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115007,"byte_end":115066,"line_start":67,"line_end":67,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115071,"byte_end":115136,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: Span IDs must be greater than zero.</pre></div>","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115141,"byte_end":115215,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115220,"byte_end":115223,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115228,"byte_end":115240,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/ - If the provided `u64` is 0","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115245,"byte_end":115277,"line_start":72,"line_end":72,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115560,"byte_end":115577,"line_start":81,"line_end":81,"column_start":18,"column_end":35},"name":"from_non_zero_u64","qualname":"<Id>::from_non_zero_u64","value":"pub const fn from_non_zero_u64(NonZeroU64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span ID from the given `NonZeroU64`.","sig":null,"attributes":[{"value":"/ Constructs a new span ID from the given `NonZeroU64`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115389,"byte_end":115446,"line_start":77,"line_end":77,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115451,"byte_end":115454,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Id::from_u64`](#method.from_u64), this will never panic.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115459,"byte_end":115528,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115533,"byte_end":115542,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115790,"byte_end":115798,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"into_u64","qualname":"<Id>::into_u64","value":"pub fn into_u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's ID as a `u64`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115697,"byte_end":115736,"line_start":86,"line_end":86,"column_start":5,"column_end":44}},{"value":"/ Returns the span's ID as a `u64`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115741,"byte_end":115778,"line_start":87,"line_end":87,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116034,"byte_end":116051,"line_start":96,"line_end":96,"column_start":18,"column_end":35},"name":"into_non_zero_u64","qualname":"<Id>::into_non_zero_u64","value":"pub const fn into_non_zero_u64(&Self) -> NonZeroU64","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's ID as a `NonZeroU64`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115914,"byte_end":115953,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/ Returns the span's ID as a `NonZeroU64`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":115958,"byte_end":116002,"line_start":94,"line_end":94,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116007,"byte_end":116016,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116400,"byte_end":116403,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<Attributes>::new","value":"pub fn new(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new child span of the current span,\n with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new child span of the current span,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116268,"byte_end":116341,"line_start":110,"line_end":110,"column_start":5,"column_end":78}},{"value":"/ with the provided metadata and values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116346,"byte_end":116388,"line_start":111,"line_end":111,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116746,"byte_end":116754,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Attributes>::new_root","value":"pub fn new_root(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new span at the root of its own trace\n tree, with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new span at the root of its own trace","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116606,"byte_end":116681,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ tree, with the provided metadata and values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116686,"byte_end":116734,"line_start":121,"line_end":121,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117095,"byte_end":117103,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Attributes>::child_of","value":"pub fn child_of(Id, &'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new child span of the specified\n parent span, with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new child span of the specified","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116954,"byte_end":117023,"line_start":130,"line_end":130,"column_start":5,"column_end":74}},{"value":"/ parent span, with the provided metadata and values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117028,"byte_end":117083,"line_start":131,"line_end":131,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117421,"byte_end":117429,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Attributes>::metadata","value":"pub fn metadata(&Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the new span's metadata.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the new span's metadata.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117358,"byte_end":117409,"line_start":144,"line_end":144,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117614,"byte_end":117620,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"values","qualname":"<Attributes>::values","value":"pub fn values(&Self) -> &field::ValueSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `ValueSet` containing any values the new span\n was created with.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `ValueSet` containing any values the new span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117502,"byte_end":117576,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ was created with.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117581,"byte_end":117602,"line_start":150,"line_end":150,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117747,"byte_end":117754,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Attributes>::is_root","value":"pub fn is_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new span should be a root.\n","sig":null,"attributes":[{"value":"/ Returns true if the new span should be a root.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117685,"byte_end":117735,"line_start":155,"line_end":155,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118209,"byte_end":118222,"line_start":167,"line_end":167,"column_start":12,"column_end":25},"name":"is_contextual","qualname":"<Attributes>::is_contextual","value":"pub fn is_contextual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new span's parent should be determined based on the\n current context.","sig":null,"attributes":[{"value":"/ Returns true if the new span's parent should be determined based on the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117827,"byte_end":117902,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ current context.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117907,"byte_end":117927,"line_start":161,"line_end":161,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117932,"byte_end":117935,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ If this is true and the current thread is currently inside a span, then","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":117940,"byte_end":118015,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ that span should be the new span's parent. Otherwise, if the current","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118020,"byte_end":118092,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ thread is _not_ inside a span, then the new span will be the root of its","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118097,"byte_end":118173,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ own trace tree.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118178,"byte_end":118197,"line_start":166,"line_end":166,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118494,"byte_end":118500,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"parent","qualname":"<Attributes>::parent","value":"pub fn parent(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns the new span's explicitly-specified parent, if there is one.","sig":null,"attributes":[{"value":"/ Returns the new span's explicitly-specified parent, if there is one.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118298,"byte_end":118370,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118375,"byte_end":118378,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Otherwise (if the new span is a root or is a child of the current span),","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118383,"byte_end":118459,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ returns false.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118464,"byte_end":118482,"line_start":174,"line_end":174,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118801,"byte_end":118807,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"record","qualname":"<Attributes>::record","value":"pub fn record(&Self, &mut field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in this set of `Attributes` with the provided\n [Visitor].","sig":null,"attributes":[{"value":"/ Records all the fields in this set of `Attributes` with the provided","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118645,"byte_end":118717,"line_start":182,"line_end":182,"column_start":5,"column_end":77}},{"value":"/ [Visitor].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118722,"byte_end":118736,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118741,"byte_end":118744,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118749,"byte_end":118789,"line_start":185,"line_end":185,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119002,"byte_end":119010,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"contains","qualname":"<Attributes>::contains","value":"pub fn contains(&Self, &field::Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this set of `Attributes` contains a value for the\n given `Field`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this set of `Attributes` contains a value for the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118896,"byte_end":118967,"line_start":190,"line_end":190,"column_start":5,"column_end":76}},{"value":"/ given `Field`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":118972,"byte_end":118990,"line_start":191,"line_end":191,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119175,"byte_end":119183,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Attributes>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this set of `Attributes` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this set of `Attributes` contains _no_ values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119097,"byte_end":119163,"line_start":196,"line_end":196,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119816,"byte_end":119822,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"fields","qualname":"<Attributes>::fields","value":"pub fn fields(&Self) -> &FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns the set of all [fields] defined by this span's [`Metadata`].","sig":null,"attributes":[{"value":"/ Returns the set of all [fields] defined by this span's [`Metadata`].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119243,"byte_end":119315,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119320,"byte_end":119323,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that the [`FieldSet`] returned by this method includes *all* the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119328,"byte_end":119401,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ fields declared by this span, not just those with values that are recorded","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119406,"byte_end":119484,"line_start":204,"line_end":204,"column_start":5,"column_end":83}},{"value":"/ as part of this set of `Attributes`. Other fields with values not present in","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119489,"byte_end":119569,"line_start":205,"line_end":205,"column_start":5,"column_end":85}},{"value":"/ this `Attributes`' value set may [record] values later.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119574,"byte_end":119633,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119638,"byte_end":119641,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [fields]: crate::field","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119646,"byte_end":119672,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/ [record]: Attributes::record()","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119677,"byte_end":119711,"line_start":209,"line_end":209,"column_start":5,"column_end":39}},{"value":"/ [`Metadata`]: crate::metadata::Metadata","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119716,"byte_end":119759,"line_start":210,"line_end":210,"column_start":5,"column_end":48}},{"value":"/ [`FieldSet`]: crate::field::FieldSet","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119764,"byte_end":119804,"line_start":211,"line_end":211,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120000,"byte_end":120003,"line_start":221,"line_end":221,"column_start":12,"column_end":15},"name":"new","qualname":"<Record>::new","value":"pub fn new(&'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Record` from a `ValueSet`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Record` from a `ValueSet`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119940,"byte_end":119988,"line_start":220,"line_end":220,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120219,"byte_end":120225,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"record","qualname":"<Record>::record","value":"pub fn record(&Self, &mut field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in this `Record` with the provided [Visitor].","sig":null,"attributes":[{"value":"/ Records all the fields in this `Record` with the provided [Visitor].","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120082,"byte_end":120154,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120159,"byte_end":120162,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120167,"byte_end":120207,"line_start":227,"line_end":227,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120401,"byte_end":120409,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"contains","qualname":"<Record>::contains","value":"pub fn contains(&Self, &field::Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Record` contains a value for the given `Field`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Record` contains a value for the given `Field`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120314,"byte_end":120389,"line_start":232,"line_end":232,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120563,"byte_end":120571,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Record>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Record` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Record` contains _no_ values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120496,"byte_end":120551,"line_start":237,"line_end":237,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120814,"byte_end":120817,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<Current>::new","value":"pub fn new(Id, &'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Current` that indicates the current context is a span\n with the given `metadata` and `metadata`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Current` that indicates the current context is a span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120677,"byte_end":120752,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ with the given `metadata` and `metadata`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120757,"byte_end":120802,"line_start":247,"line_end":247,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121074,"byte_end":121078,"line_start":256,"line_end":256,"column_start":12,"column_end":16},"name":"none","qualname":"<Current>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Current` that indicates the current context is *not*\n in a span.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Current` that indicates the current context is *not*","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120969,"byte_end":121043,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ in a span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121048,"byte_end":121062,"line_start":255,"line_end":255,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121978,"byte_end":121986,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"is_known","qualname":"<Current>::is_known","value":"pub fn is_known(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Subscriber` that constructed this `Current` tracks a\n current span.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Subscriber` that constructed this `Current` tracks a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121384,"byte_end":121463,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ current span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121468,"byte_end":121485,"line_start":271,"line_end":271,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121490,"byte_end":121493,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ If this returns `true` and [`id`], [`metadata`], or [`into_inner`]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121498,"byte_end":121568,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ return `None`, that indicates that we are currently known to *not* be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121573,"byte_end":121646,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ inside a span. If this returns `false`, those methods will also return","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121651,"byte_end":121725,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ `None`, but in this case, that is because the subscriber does not keep","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121730,"byte_end":121804,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ track of the currently-entered span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121809,"byte_end":121849,"line_start":277,"line_end":277,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121854,"byte_end":121857,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ [`id`]: #method.id","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121862,"byte_end":121884,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121889,"byte_end":121923,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/ [`into_inner`]: #method.into_inner","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":121928,"byte_end":121966,"line_start":281,"line_end":281,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":122197,"byte_end":122207,"line_start":288,"line_end":288,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Current>::into_inner","value":"pub fn into_inner(Self) -> Option<(Id, &'static Metadata)>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the span `Id` and `Metadata` of the current\n span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the span `Id` and `Metadata` of the current","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":122068,"byte_end":122143,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ span, if one exists and is known.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":122148,"byte_end":122185,"line_start":287,"line_end":287,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":122488,"byte_end":122490,"line_start":296,"line_end":296,"column_start":12,"column_end":14},"name":"id","qualname":"<Current>::id","value":"pub fn id(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Id` of the current span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Borrows the `Id` of the current span, if one exists and is known.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":122407,"byte_end":122476,"line_start":295,"line_end":295,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":122735,"byte_end":122743,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Current>::metadata","value":"pub fn metadata(&Self) -> Option<&'static Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Metadata` of the current span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Borrows the `Metadata` of the current span, if one exists and is known.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":122648,"byte_end":122723,"line_start":303,"line_end":303,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":540},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subscriber","qualname":"::subscriber","value":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":567},{"krate":0,"index":1046},{"krate":0,"index":1051},{"krate":0,"index":1049},{"krate":0,"index":1053},{"krate":0,"index":1077},{"krate":0,"index":1075},{"krate":0,"index":1073},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1065},{"krate":0,"index":1063},{"krate":0,"index":572},{"krate":0,"index":580},{"krate":0,"index":595}],"decl_id":null,"docs":" Subscribers collect and record trace data.\n","sig":null,"attributes":[{"value":"/ Subscribers collect and record trace data.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":125980,"byte_end":126026,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":552},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129894,"byte_end":129904,"line_start":74,"line_end":74,"column_start":11,"column_end":21},"name":"Subscriber","qualname":"::subscriber::Subscriber","value":"Subscriber: 'static","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Trait representing the functions required to collect trace data.","sig":null,"attributes":[{"value":"/ Trait representing the functions required to collect trace data.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126157,"byte_end":126225,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126226,"byte_end":126229,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Crates that provide implementations of methods for collecting or recording","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126230,"byte_end":126308,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ trace data should implement the `Subscriber` interface. This trait is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126309,"byte_end":126382,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ intended to represent fundamental primitives for collecting trace events and","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126383,"byte_end":126463,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ spans — other libraries may offer utility functions and types to make","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126464,"byte_end":126539,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/ subscriber implementations more modular or improve the ergonomics of writing","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126540,"byte_end":126620,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ subscribers.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126621,"byte_end":126637,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126638,"byte_end":126641,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A subscriber is responsible for the following:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126642,"byte_end":126692,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/ - Registering new spans as they are created, and providing them with span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126693,"byte_end":126770,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   IDs. Implicitly, this means the subscriber may determine the strategy for","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126771,"byte_end":126850,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   determining span equality.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126851,"byte_end":126883,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ - Recording the attachment of field values and follows-from annotations to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126884,"byte_end":126962,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   spans.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126963,"byte_end":126975,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ - Filtering spans and events, and determining when those filters must be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":126976,"byte_end":127052,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/   invalidated.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127053,"byte_end":127071,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ - Observing spans as they are entered, exited, and closed, and events as","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127072,"byte_end":127148,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/   they occur.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127149,"byte_end":127166,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127167,"byte_end":127170,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When a span is entered or exited, the subscriber is provided only with the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127171,"byte_end":127249,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ [ID] with which it tagged that span when it was created. This means","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127250,"byte_end":127321,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ that it is up to the subscriber to determine whether and how span _data_ —","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127322,"byte_end":127402,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the fields and metadata describing the span — should be stored. The","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127403,"byte_end":127476,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ [`new_span`] function is called when a new span is created, and at that","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127477,"byte_end":127552,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ point, the subscriber _may_ choose to store the associated data if it will","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127553,"byte_end":127631,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ be referenced again. However, if the data has already been recorded and will","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127632,"byte_end":127712,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ not be needed by the implementations of `enter` and `exit`, the subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127713,"byte_end":127791,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ may freely discard that data without allocating space to store it.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127792,"byte_end":127862,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127863,"byte_end":127866,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Overriding default impls","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127867,"byte_end":127898,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127899,"byte_end":127902,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Some trait methods on `Subscriber` have default implementations, either in","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127903,"byte_end":127981,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ order to reduce the surface area of implementing `Subscriber`, or for","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":127982,"byte_end":128055,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ backward-compatibility reasons. However, many subscribers will likely want","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128056,"byte_end":128134,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ to override these default implementations.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128135,"byte_end":128181,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128182,"byte_end":128185,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The following methods are likely of interest:","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128186,"byte_end":128235,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128236,"byte_end":128239,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - [`register_callsite`] is called once for each callsite from which a span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128240,"byte_end":128318,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/   event may originate, and returns an [`Interest`] value describing whether or","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128319,"byte_end":128401,"line_start":50,"line_end":50,"column_start":1,"column_end":83}},{"value":"/   not the subscriber wishes to see events or spans from that callsite. By","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128402,"byte_end":128479,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/   default, it calls [`enabled`], and returns `Interest::always()` if","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128480,"byte_end":128552,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/   `enabled` returns true, or `Interest::never()` if enabled returns false.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128553,"byte_end":128631,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/   However, if the subscriber's interest can change dynamically at runtime,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128632,"byte_end":128710,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/   it may want to override this function to return `Interest::sometimes()`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128711,"byte_end":128789,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/   Additionally, subscribers which wish to perform a behaviour once for each","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128790,"byte_end":128869,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/   callsite, such as allocating storage for data related to that callsite,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128870,"byte_end":128947,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/   can perform it in `register_callsite`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128948,"byte_end":128992,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/ - [`clone_span`] is called every time a span ID is cloned, and [`try_close`]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":128993,"byte_end":129073,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/   is called when a span ID is dropped. By default, these functions do","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129074,"byte_end":129147,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/   nothing. However, they can be used to implement reference counting for","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129148,"byte_end":129224,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/   spans, allowing subscribers to free storage for span data and to determine","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129225,"byte_end":129305,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/   when a span has _closed_ permanently (rather than being exited).","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129306,"byte_end":129376,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/   Subscribers which store per-span data or which need to track span closures","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129377,"byte_end":129457,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/   should override these functions together.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129458,"byte_end":129505,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129506,"byte_end":129509,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [ID]: ../span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129510,"byte_end":129542,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ [`new_span`]: trait.Subscriber.html#method.new_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129543,"byte_end":129598,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"/ [`register_callsite`]: trait.Subscriber.html#method.register_callsite","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129599,"byte_end":129672,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129673,"byte_end":129711,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/ [`enabled`]: trait.Subscriber.html#method.enabled","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129712,"byte_end":129765,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ [`clone_span`]: trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129766,"byte_end":129825,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":129826,"byte_end":129883,"line_start":73,"line_end":73,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133941,"byte_end":133958,"line_start":144,"line_end":144,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"::subscriber::Subscriber::register_callsite","value":"pub fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Registers a new callsite with this subscriber, returning whether or not\n the subscriber is interested in being notified about the callsite.","sig":null,"attributes":[{"value":"/ Registers a new callsite with this subscriber, returning whether or not","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130001,"byte_end":130076,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ the subscriber is interested in being notified about the callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130081,"byte_end":130151,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130156,"byte_end":130159,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ By default, this function assumes that the subscriber's [filter]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130164,"byte_end":130232,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ represents an unchanging view of its interest in the callsite. However,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130237,"byte_end":130312,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ if this is not the case, subscribers may override this function to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130317,"byte_end":130387,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ indicate different interests, or to implement behaviour that should run","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130392,"byte_end":130467,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ once for every callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130472,"byte_end":130500,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130505,"byte_end":130508,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to be called at least once per callsite on","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130513,"byte_end":130587,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ every active subscriber. The subscriber may store the keys to fields it","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130592,"byte_end":130667,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ cares about in order to reduce the cost of accessing fields by name,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130672,"byte_end":130744,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ preallocate storage for that callsite, or perform any other actions it","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130749,"byte_end":130823,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ wishes to perform once for each callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130828,"byte_end":130873,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130878,"byte_end":130881,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ The subscriber should then return an [`Interest`], indicating","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130886,"byte_end":130951,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/ whether it is interested in being notified about that callsite in the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":130956,"byte_end":131029,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/ future. This may be `Always` indicating that the subscriber always","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131034,"byte_end":131104,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ wishes to be notified about the callsite, and its filter need not be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131109,"byte_end":131181,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ re-evaluated; `Sometimes`, indicating that the subscriber may sometimes","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131186,"byte_end":131261,"line_start":96,"line_end":96,"column_start":5,"column_end":80}},{"value":"/ care about the callsite but not always (such as when sampling), or","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131266,"byte_end":131336,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ `Never`, indicating that the subscriber never wishes to be notified about","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131341,"byte_end":131418,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ that callsite. If all active subscribers return `Never`, a callsite will","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131423,"byte_end":131499,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ never be enabled unless a new subscriber expresses interest in it.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131504,"byte_end":131574,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131579,"byte_end":131582,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ `Subscriber`s which require their filters to be run every time an event","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131587,"byte_end":131662,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ occurs or a span is entered/exited should return `Interest::sometimes`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131667,"byte_end":131742,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ If a subscriber returns `Interest::sometimes`, then its' [`enabled`] method","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131747,"byte_end":131826,"line_start":104,"line_end":104,"column_start":5,"column_end":84}},{"value":"/ will be called every time an event or span is created from that callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131831,"byte_end":131908,"line_start":105,"line_end":105,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131913,"byte_end":131916,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ For example, suppose a sampling subscriber is implemented by","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131921,"byte_end":131985,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ incrementing a counter every time `enabled` is called and only returning","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":131990,"byte_end":132066,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ `true` when the counter is divisible by a specified sampling rate. If","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132071,"byte_end":132144,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ that subscriber returns `Interest::always` from `register_callsite`, then","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132149,"byte_end":132226,"line_start":110,"line_end":110,"column_start":5,"column_end":82}},{"value":"/ the filter will not be re-evaluated once it has been applied to a given","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132231,"byte_end":132306,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ set of metadata. Thus, the counter will not be incremented, and the span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132311,"byte_end":132387,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ or event that corresponds to the metadata will never be `enabled`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132392,"byte_end":132462,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132467,"byte_end":132470,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ `Subscriber`s that need to change their filters occasionally should call","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132475,"byte_end":132551,"line_start":115,"line_end":115,"column_start":5,"column_end":81}},{"value":"/ [`rebuild_interest_cache`] to re-evaluate `register_callsite` for all","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132556,"byte_end":132629,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ callsites.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132634,"byte_end":132648,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132653,"byte_end":132656,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Similarly, if a `Subscriber` has a filtering strategy that can be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132661,"byte_end":132730,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/ changed dynamically at runtime, it would need to re-evaluate that filter","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132735,"byte_end":132811,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ if the cached results have changed.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132816,"byte_end":132855,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132860,"byte_end":132863,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ A subscriber which manages fanout to multiple other subscribers","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132868,"byte_end":132935,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ should proxy this decision to all of its child subscribers,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":132940,"byte_end":133003,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ returning `Interest::never` only if _all_ such children return","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133008,"byte_end":133074,"line_start":125,"line_end":125,"column_start":5,"column_end":71}},{"value":"/ `Interest::never`. If the set of subscribers to which spans are","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133079,"byte_end":133146,"line_start":126,"line_end":126,"column_start":5,"column_end":72}},{"value":"/ broadcast may change dynamically, the subscriber should also never","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133151,"byte_end":133221,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ return `Interest::Never`, as a new subscriber may be added that _is_","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133226,"byte_end":133298,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ interested.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133303,"byte_end":133318,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133323,"byte_end":133326,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133331,"byte_end":133342,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ This function may be called again when a new subscriber is created or","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133347,"byte_end":133420,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/ when the registry is invalidated.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133425,"byte_end":133462,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133467,"byte_end":133470,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If a subscriber returns `Interest::never` for a particular callsite, it","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133475,"byte_end":133550,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ _may_ still see spans and events originating from that callsite, if","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133555,"byte_end":133626,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ another subscriber expressed interest in it.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133631,"byte_end":133679,"line_start":137,"line_end":137,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133684,"byte_end":133687,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [filter]: #method.enabled","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133692,"byte_end":133721,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133726,"byte_end":133774,"line_start":140,"line_end":140,"column_start":5,"column_end":53}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133779,"byte_end":133817,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`enabled`]: #method.enabled","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133822,"byte_end":133854,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/ [`rebuild_interest_cache`]: ../callsite/fn.rebuild_interest_cache.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":133859,"byte_end":133933,"line_start":143,"line_end":143,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135332,"byte_end":135339,"line_start":172,"line_end":172,"column_start":8,"column_end":15},"name":"enabled","qualname":"::subscriber::Subscriber::enabled","value":"pub fn enabled(&Self, &Metadata) -> bool","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Returns true if a span or event with the specified [metadata] would be\n recorded.","sig":null,"attributes":[{"value":"/ Returns true if a span or event with the specified [metadata] would be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134153,"byte_end":134227,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ recorded.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134232,"byte_end":134245,"line_start":153,"line_end":153,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134250,"byte_end":134253,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ By default, it is assumed that this filter needs only be evaluated once","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134258,"byte_end":134333,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ for each callsite, so it is called by [`register_callsite`] when each","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134338,"byte_end":134411,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ callsite is registered. The result is used to determine if the subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134416,"byte_end":134493,"line_start":157,"line_end":157,"column_start":5,"column_end":82}},{"value":"/ is always [interested] or never interested in that callsite. This is intended","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134498,"byte_end":134579,"line_start":158,"line_end":158,"column_start":5,"column_end":86}},{"value":"/ primarily as an optimization, so that expensive filters (such as those","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134584,"byte_end":134658,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ involving string search, et cetera) need not be re-evaluated.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134663,"byte_end":134728,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134733,"byte_end":134736,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ However, if the subscriber's interest in a particular span or event may","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134741,"byte_end":134816,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ change, or depends on contexts only determined dynamically at runtime,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134821,"byte_end":134895,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ then the `register_callsite` method should be overridden to return","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134900,"byte_end":134970,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ [`Interest::sometimes`]. In that case, this function will be called every","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":134975,"byte_end":135052,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ time that span or event occurs.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135057,"byte_end":135092,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135097,"byte_end":135100,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135105,"byte_end":135153,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ [interested]: struct.Interest.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135158,"byte_end":135196,"line_start":169,"line_end":169,"column_start":5,"column_end":43}},{"value":"/ [`Interest::sometimes`]: struct.Interest.html#method.sometimes","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135201,"byte_end":135267,"line_start":170,"line_end":170,"column_start":5,"column_end":71}},{"value":"/ [`register_callsite`]: #method.register_callsite","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135272,"byte_end":135324,"line_start":171,"line_end":171,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136789,"byte_end":136803,"line_start":197,"line_end":197,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"::subscriber::Subscriber::max_level_hint","value":"pub fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Returns the highest [verbosity level][level] that this `Subscriber` will\n enable, or `None`, if the subscriber does not implement level-based\n filtering or chooses not to implement this method.","sig":null,"attributes":[{"value":"/ Returns the highest [verbosity level][level] that this `Subscriber` will","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135386,"byte_end":135462,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ enable, or `None`, if the subscriber does not implement level-based","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135467,"byte_end":135538,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ filtering or chooses not to implement this method.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135543,"byte_end":135597,"line_start":176,"line_end":176,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135602,"byte_end":135605,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ If this method returns a [`Level`][level], it will be used as a hint to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135610,"byte_end":135685,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ determine the most verbose level that will be enabled. This will allow","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135690,"byte_end":135764,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ spans and events which are more verbose than that level to be skipped","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135769,"byte_end":135842,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/ more efficiently. Subscribers which perform filtering are strongly","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135847,"byte_end":135917,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ encouraged to provide an implementation of this method.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135922,"byte_end":135981,"line_start":182,"line_end":182,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135986,"byte_end":135989,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If the maximum level the subscriber will enable can change over the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":135994,"byte_end":136065,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ course of its lifetime, it is free to return a different value from","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136070,"byte_end":136141,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ multiple invocations of this method. However, note that changes in the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136146,"byte_end":136220,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ maximum level will **only** be reflected after the callsite [`Interest`]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136225,"byte_end":136301,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ cache is rebuilt, by calling the [`callsite::rebuild_interest_cache`][rebuild]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136306,"byte_end":136388,"line_start":188,"line_end":188,"column_start":5,"column_end":87}},{"value":"/ function. Therefore, if the subscriber will change the value returned by","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136393,"byte_end":136469,"line_start":189,"line_end":189,"column_start":5,"column_end":81}},{"value":"/ this method, it is responsible for ensuring that","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136474,"byte_end":136526,"line_start":190,"line_end":190,"column_start":5,"column_end":57}},{"value":"/ [`rebuild_interest_cache`][rebuild] is called after the value of the max","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136531,"byte_end":136607,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ level changes.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136612,"byte_end":136630,"line_start":192,"line_end":192,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136635,"byte_end":136638,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ [level]: ../struct.Level.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136643,"byte_end":136676,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136681,"byte_end":136719,"line_start":195,"line_end":195,"column_start":5,"column_end":43}},{"value":"/ [rebuild]: ../callsite/fn.rebuild_interest_cache.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136724,"byte_end":136781,"line_start":196,"line_end":196,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138246,"byte_end":138254,"line_start":225,"line_end":225,"column_start":8,"column_end":16},"name":"new_span","qualname":"::subscriber::Subscriber::new_span","value":"pub fn new_span(&Self, &span::Attributes) -> span::Id","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Visit the construction of a new span, returning a new [span ID] for the\n span being constructed.","sig":null,"attributes":[{"value":"/ Visit the construction of a new span, returning a new [span ID] for the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136860,"byte_end":136935,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/ span being constructed.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136940,"byte_end":136967,"line_start":202,"line_end":202,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136972,"byte_end":136975,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The provided [`Attributes`] contains any field values that were provided","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":136980,"byte_end":137056,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ when the span was created. The subscriber may pass a [visitor] to the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137061,"byte_end":137134,"line_start":205,"line_end":205,"column_start":5,"column_end":78}},{"value":"/ `Attributes`' [`record` method] to record these values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137139,"byte_end":137198,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137203,"byte_end":137206,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ IDs are used to uniquely identify spans and events within the context of a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137211,"byte_end":137289,"line_start":208,"line_end":208,"column_start":5,"column_end":83}},{"value":"/ subscriber, so span equality will be based on the returned ID. Thus, if","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137294,"byte_end":137369,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the subscriber wishes for all spans with the same metadata to be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137374,"byte_end":137442,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ considered equal, it should return the same ID every time it is given a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137447,"byte_end":137522,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ particular set of metadata. Similarly, if it wishes for two separate","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137527,"byte_end":137599,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ instances of a span with the same metadata to *not* be equal, it should","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137604,"byte_end":137679,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ return a distinct ID every time this function is called, regardless of","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137684,"byte_end":137758,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ the metadata.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137763,"byte_end":137780,"line_start":215,"line_end":215,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137785,"byte_end":137788,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Note that the subscriber is free to assign span IDs based on whatever","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137793,"byte_end":137866,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ scheme it sees fit. Any guarantees about uniqueness, ordering, or ID","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137871,"byte_end":137943,"line_start":218,"line_end":218,"column_start":5,"column_end":77}},{"value":"/ reuse are left up to the subscriber implementation to determine.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":137948,"byte_end":138016,"line_start":219,"line_end":219,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138021,"byte_end":138024,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138029,"byte_end":138066,"line_start":221,"line_end":221,"column_start":5,"column_end":42}},{"value":"/ [`Attributes`]: ../span/struct.Attributes.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138071,"byte_end":138121,"line_start":222,"line_end":222,"column_start":5,"column_end":55}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138126,"byte_end":138166,"line_start":223,"line_end":223,"column_start":5,"column_end":45}},{"value":"/ [`record` method]: ../span/struct.Attributes.html#method.record","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138171,"byte_end":138238,"line_start":224,"line_end":224,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139891,"byte_end":139897,"line_start":266,"line_end":266,"column_start":8,"column_end":14},"name":"record","qualname":"::subscriber::Subscriber::record","value":"pub fn record(&Self, &span::Id, &span::Record)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Record a set of values on a span.","sig":null,"attributes":[{"value":"/ Record a set of values on a span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138390,"byte_end":138427,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138432,"byte_end":138435,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This method will be invoked when value is recorded on a span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138440,"byte_end":138505,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/ Recording multiple values for the same field is possible,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138510,"byte_end":138571,"line_start":232,"line_end":232,"column_start":5,"column_end":66}},{"value":"/ but the actual behaviour is defined by the subscriber implementation.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138576,"byte_end":138649,"line_start":233,"line_end":233,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138654,"byte_end":138657,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Keep in mind that a span might not provide a value","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138662,"byte_end":138716,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/ for each field it declares.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138721,"byte_end":138752,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138757,"byte_end":138760,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The subscriber is expected to provide a [visitor] to the `Record`'s","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138765,"byte_end":138836,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ [`record` method] in order to record the added values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138841,"byte_end":138899,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138904,"byte_end":138907,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138912,"byte_end":138925,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/  \"foo = 3\" will be recorded when [`record`] is called on the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138930,"byte_end":138994,"line_start":242,"line_end":242,"column_start":5,"column_end":69}},{"value":"/ `Attributes` passed to `new_span`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":138999,"byte_end":139037,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ Since values are not provided for the `bar` and `baz` fields,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139042,"byte_end":139107,"line_start":244,"line_end":244,"column_start":5,"column_end":70}},{"value":"/ the span's `Metadata` will indicate that it _has_ those fields,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139112,"byte_end":139179,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"/ but values for them won't be recorded at this time.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139184,"byte_end":139239,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139244,"byte_end":139247,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139252,"byte_end":139270,"line_start":248,"line_end":248,"column_start":5,"column_end":23}},{"value":"/ #[macro_use]","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139275,"byte_end":139291,"line_start":249,"line_end":249,"column_start":5,"column_end":21}},{"value":"/ extern crate tracing;","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139296,"byte_end":139321,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139326,"byte_end":139329,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let mut span = span!(\"my_span\", foo = 3, bar, baz);","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139334,"byte_end":139389,"line_start":252,"line_end":252,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139394,"byte_end":139397,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ // `Subscriber::record` will be called with a `Record`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139402,"byte_end":139460,"line_start":254,"line_end":254,"column_start":5,"column_end":63}},{"value":"/ // containing \"bar = false\"","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139465,"byte_end":139496,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/ span.record(\"bar\", &false);","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139501,"byte_end":139532,"line_start":256,"line_end":256,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139537,"byte_end":139540,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // `Subscriber::record` will be called with a `Record`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139545,"byte_end":139603,"line_start":258,"line_end":258,"column_start":5,"column_end":63}},{"value":"/ // containing \"baz = \"a string\"\"","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139608,"byte_end":139644,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/ span.record(\"baz\", &\"a string\");","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139649,"byte_end":139685,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139690,"byte_end":139697,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139702,"byte_end":139705,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139710,"byte_end":139750,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/ [`record`]: ../span/struct.Attributes.html#method.record","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139755,"byte_end":139815,"line_start":264,"line_end":264,"column_start":5,"column_end":65}},{"value":"/ [`record` method]: ../span/struct.Record.html#method.record","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139820,"byte_end":139883,"line_start":265,"line_end":265,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141131,"byte_end":141150,"line_start":286,"line_end":286,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"::subscriber::Subscriber::record_follows_from","value":"pub fn record_follows_from(&Self, &span::Id, &span::Id)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Adds an indication that `span` follows from the span with the id\n `follows`.","sig":null,"attributes":[{"value":"/ Adds an indication that `span` follows from the span with the id","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":139955,"byte_end":140023,"line_start":268,"line_end":268,"column_start":5,"column_end":73}},{"value":"/ `follows`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140028,"byte_end":140042,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140047,"byte_end":140050,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This relationship differs somewhat from the parent-child relationship: a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140055,"byte_end":140131,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ span may have any number of prior spans, rather than a single one; and","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140136,"byte_end":140210,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ spans are not considered to be executing _inside_ of the spans they","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140215,"byte_end":140286,"line_start":273,"line_end":273,"column_start":5,"column_end":76}},{"value":"/ follow from. This means that a span may close even if subsequent spans","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140291,"byte_end":140365,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ that follow from it are still open, and time spent inside of a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140370,"byte_end":140436,"line_start":275,"line_end":275,"column_start":5,"column_end":71}},{"value":"/ subsequent span should not be included in the time its precedents were","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140441,"byte_end":140515,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ executing. This is used to model causal relationships such as when a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140520,"byte_end":140592,"line_start":277,"line_end":277,"column_start":5,"column_end":77}},{"value":"/ single future spawns several related background tasks, et cetera.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140597,"byte_end":140666,"line_start":278,"line_end":278,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140671,"byte_end":140674,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ If the subscriber has spans corresponding to the given IDs, it should","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140679,"byte_end":140752,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ record this relationship in whatever way it deems necessary. Otherwise,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140757,"byte_end":140832,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/ if one or both of the given span IDs do not correspond to spans that the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140837,"byte_end":140913,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ subscriber knows about, or if a cyclical relationship would be created","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140918,"byte_end":140992,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ (i.e., some span _a_ which proceeds some other span _b_ may not also","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":140997,"byte_end":141069,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ follow from _b_), it may silently do nothing.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141074,"byte_end":141123,"line_start":285,"line_end":285,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142121,"byte_end":142126,"line_start":306,"line_end":306,"column_start":8,"column_end":13},"name":"event","qualname":"::subscriber::Subscriber::event","value":"pub fn event(&Self, &Event)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Records that an [`Event`] has occurred.","sig":null,"attributes":[{"value":"/ Records that an [`Event`] has occurred.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141201,"byte_end":141244,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141249,"byte_end":141252,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This method will be invoked when an Event is constructed by","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141257,"byte_end":141320,"line_start":290,"line_end":290,"column_start":5,"column_end":68}},{"value":"/ the `Event`'s [`dispatch` method]. For example, this happens internally","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141325,"byte_end":141400,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ when an event macro from `tracing` is called.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141405,"byte_end":141454,"line_start":292,"line_end":292,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141459,"byte_end":141462,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ The key difference between this method and `record` is that `record` is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141467,"byte_end":141542,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ called when a value is recorded for a field defined by a span,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141547,"byte_end":141613,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/ while `event` is called when a new event occurs.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141618,"byte_end":141670,"line_start":296,"line_end":296,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141675,"byte_end":141678,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ The provided `Event` struct contains any field values attached to the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141683,"byte_end":141756,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ event. The subscriber may pass a [visitor] to the `Event`'s","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141761,"byte_end":141824,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/ [`record` method] to record these values.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141829,"byte_end":141874,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141879,"byte_end":141882,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141887,"byte_end":141928,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141933,"byte_end":141973,"line_start":303,"line_end":303,"column_start":5,"column_end":45}},{"value":"/ [`record` method]: ../event/struct.Event.html#method.record","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":141978,"byte_end":142041,"line_start":304,"line_end":304,"column_start":5,"column_end":68}},{"value":"/ [`dispatch` method]: ../event/struct.Event.html#method.dispatch","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142046,"byte_end":142113,"line_start":305,"line_end":305,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142542,"byte_end":142547,"line_start":316,"line_end":316,"column_start":8,"column_end":13},"name":"enter","qualname":"::subscriber::Subscriber::enter","value":"pub fn enter(&Self, &span::Id)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Records that a span has been entered.","sig":null,"attributes":[{"value":"/ Records that a span has been entered.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142159,"byte_end":142200,"line_start":308,"line_end":308,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142205,"byte_end":142208,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ When entering a span, this method is called to notify the subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142213,"byte_end":142285,"line_start":310,"line_end":310,"column_start":5,"column_end":77}},{"value":"/ that the span has been entered. The subscriber is provided with the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142290,"byte_end":142361,"line_start":311,"line_end":311,"column_start":5,"column_end":76}},{"value":"/ [span ID] of the entered span, and should update any internal state","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142366,"byte_end":142437,"line_start":312,"line_end":312,"column_start":5,"column_end":76}},{"value":"/ tracking the current span accordingly.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142442,"byte_end":142484,"line_start":313,"line_end":313,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142489,"byte_end":142492,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142497,"byte_end":142534,"line_start":315,"line_end":315,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143041,"byte_end":143045,"line_start":328,"line_end":328,"column_start":8,"column_end":12},"name":"exit","qualname":"::subscriber::Subscriber::exit","value":"pub fn exit(&Self, &span::Id)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Records that a span has been exited.","sig":null,"attributes":[{"value":"/ Records that a span has been exited.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142578,"byte_end":142618,"line_start":318,"line_end":318,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142623,"byte_end":142626,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ When exiting a span, this method is called to notify the subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142631,"byte_end":142702,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/ that the span has been exited. The subscriber is provided with the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142707,"byte_end":142777,"line_start":321,"line_end":321,"column_start":5,"column_end":75}},{"value":"/ [span ID] of the exited span, and should update any internal state","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142782,"byte_end":142852,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ tracking the current span accordingly.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142857,"byte_end":142899,"line_start":323,"line_end":323,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142904,"byte_end":142907,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Exiting a span does not imply that the span will not be re-entered.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142912,"byte_end":142983,"line_start":325,"line_end":325,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142988,"byte_end":142991,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":142996,"byte_end":143033,"line_start":327,"line_end":327,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144240,"byte_end":144250,"line_start":350,"line_end":350,"column_start":8,"column_end":18},"name":"clone_span","qualname":"::subscriber::Subscriber::clone_span","value":"pub fn clone_span(&Self, &span::Id) -> span::Id","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been cloned.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been cloned.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143076,"byte_end":143137,"line_start":330,"line_end":330,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143142,"byte_end":143145,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to only be called with span IDs that were","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143150,"byte_end":143223,"line_start":332,"line_end":332,"column_start":5,"column_end":78}},{"value":"/ returned by this subscriber's `new_span` function.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143228,"byte_end":143282,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143287,"byte_end":143290,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Note that the default implementation of this function this is just the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143295,"byte_end":143369,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ identity function, passing through the identifier. However, it can be","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143374,"byte_end":143447,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/ used in conjunction with [`try_close`] to track the number of handles","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143452,"byte_end":143525,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ capable of `enter`ing a span. When all the handles have been dropped","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143530,"byte_end":143602,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ (i.e., `try_close` has been called one more time than `clone_span` for a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143607,"byte_end":143683,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ given ID), the subscriber may assume that the span will not be entered","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143688,"byte_end":143762,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/ again. It is then free to deallocate storage for data associated with","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143767,"byte_end":143840,"line_start":341,"line_end":341,"column_start":5,"column_end":78}},{"value":"/ that span, write data from that span to IO, and so on.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143845,"byte_end":143903,"line_start":342,"line_end":342,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143908,"byte_end":143911,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ For more unsafe situations, however, if `id` is itself a pointer of some","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143916,"byte_end":143992,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ kind this can be used as a hook to \"clone\" the pointer, depending on","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":143997,"byte_end":144069,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ what that means for the specified pointer.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144074,"byte_end":144120,"line_start":346,"line_end":346,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144125,"byte_end":144128,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144133,"byte_end":144170,"line_start":348,"line_end":348,"column_start":5,"column_end":42}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144175,"byte_end":144232,"line_start":349,"line_end":349,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144774,"byte_end":144783,"line_start":364,"line_end":364,"column_start":8,"column_end":17},"name":"drop_span","qualname":"::subscriber::Subscriber::drop_span","value":"pub fn drop_span(&Self, span::Id)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" **This method is deprecated.**","sig":null,"attributes":[{"value":"/ **This method is deprecated.**","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144317,"byte_end":144351,"line_start":354,"line_end":354,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144356,"byte_end":144359,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Using `drop_span` may result in subscribers composed using","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144364,"byte_end":144426,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ `tracing-subscriber` crate's `Layer` trait from observing close events.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144431,"byte_end":144506,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ Use [`try_close`] instead.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144511,"byte_end":144541,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144546,"byte_end":144549,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this function does nothing.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144554,"byte_end":144615,"line_start":360,"line_end":360,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144620,"byte_end":144623,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144628,"byte_end":144685,"line_start":362,"line_end":362,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.1.2\", note = \"use `Subscriber::try_close` instead\")","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144690,"byte_end":144766,"line_start":363,"line_end":363,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146978,"byte_end":146987,"line_start":402,"line_end":402,"column_start":8,"column_end":17},"name":"try_close","qualname":"::subscriber::Subscriber::try_close","value":"pub fn try_close(&Self, span::Id) -> bool","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [`span ID`] has been dropped, and returns\n `true` if there are now 0 IDs that refer to that span.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [`span ID`] has been dropped, and returns","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144814,"byte_end":144890,"line_start":366,"line_end":366,"column_start":5,"column_end":81}},{"value":"/ `true` if there are now 0 IDs that refer to that span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144895,"byte_end":144953,"line_start":367,"line_end":367,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144958,"byte_end":144961,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ Higher-level libraries providing functionality for composing multiple","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":144966,"byte_end":145039,"line_start":369,"line_end":369,"column_start":5,"column_end":78}},{"value":"/ subscriber implementations may use this return value to notify any","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145044,"byte_end":145114,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ \"layered\" subscribers that this subscriber considers the span closed.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145119,"byte_end":145192,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145197,"byte_end":145200,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method calls the subscriber's","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145205,"byte_end":145273,"line_start":373,"line_end":373,"column_start":5,"column_end":73}},{"value":"/ [`drop_span`] method and returns `false`. This means that, unless the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145278,"byte_end":145351,"line_start":374,"line_end":374,"column_start":5,"column_end":78}},{"value":"/ subscriber overrides the default implementation, close notifications","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145356,"byte_end":145428,"line_start":375,"line_end":375,"column_start":5,"column_end":77}},{"value":"/ will never be sent to any layered subscribers. In general, if the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145433,"byte_end":145502,"line_start":376,"line_end":376,"column_start":5,"column_end":74}},{"value":"/ subscriber tracks reference counts, this method should be implemented,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145507,"byte_end":145581,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/ rather than `drop_span`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145586,"byte_end":145614,"line_start":378,"line_end":378,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145619,"byte_end":145622,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to only be called with span IDs that were","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145627,"byte_end":145700,"line_start":380,"line_end":380,"column_start":5,"column_end":78}},{"value":"/ returned by this subscriber's `new_span` function.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145705,"byte_end":145759,"line_start":381,"line_end":381,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145764,"byte_end":145767,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ It's guaranteed that if this function has been called once more than the","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145772,"byte_end":145848,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ number of times `clone_span` was called with the same `id`, then no more","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145853,"byte_end":145929,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ handles that can enter the span with that `id` exist. This means that it","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":145934,"byte_end":146010,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ can be used in conjunction with [`clone_span`] to track the number of","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146015,"byte_end":146088,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ handles capable of `enter`ing a span. When all the handles have been","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146093,"byte_end":146165,"line_start":387,"line_end":387,"column_start":5,"column_end":77}},{"value":"/ dropped (i.e., `try_close` has been called one more time than","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146170,"byte_end":146235,"line_start":388,"line_end":388,"column_start":5,"column_end":70}},{"value":"/ `clone_span` for a given ID), the subscriber may assume that the span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146240,"byte_end":146313,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ will not be entered again, and should return `true`. It is then free to","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146318,"byte_end":146393,"line_start":390,"line_end":390,"column_start":5,"column_end":80}},{"value":"/ deallocate storage for data associated with that span, write data from","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146398,"byte_end":146472,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ that span to IO, and so on.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146477,"byte_end":146508,"line_start":392,"line_end":392,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146513,"byte_end":146516,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ **Note**: since this function is called when spans are dropped,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146521,"byte_end":146588,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ implementations should ensure that they are unwind-safe. Panicking from","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146593,"byte_end":146668,"line_start":395,"line_end":395,"column_start":5,"column_end":80}},{"value":"/ inside of a `try_close` function may cause a double panic, if the span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146673,"byte_end":146747,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ was dropped due to a thread unwinding.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146752,"byte_end":146794,"line_start":397,"line_end":397,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146799,"byte_end":146802,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146807,"byte_end":146844,"line_start":399,"line_end":399,"column_start":5,"column_end":42}},{"value":"/ [`clone_span`]: trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146849,"byte_end":146908,"line_start":400,"line_end":400,"column_start":5,"column_end":64}},{"value":"/ [`drop_span`]: trait.Subscriber.html#method.drop_span","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":146913,"byte_end":146970,"line_start":401,"line_end":401,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147815,"byte_end":147827,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"current_span","qualname":"::subscriber::Subscriber::current_span","value":"pub fn current_span(&Self) -> span::Current","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Returns a type representing this subscriber's view of the current span.","sig":null,"attributes":[{"value":"/ Returns a type representing this subscriber's view of the current span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147101,"byte_end":147176,"line_start":408,"line_end":408,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147181,"byte_end":147184,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ If subscribers track a current span, they should override this function","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147189,"byte_end":147264,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ to return [`Current::new`] if the thread from which this method is","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147269,"byte_end":147339,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ called is inside a span, or [`Current::none`] if the thread is not","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147344,"byte_end":147414,"line_start":412,"line_end":412,"column_start":5,"column_end":75}},{"value":"/ inside a span.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147419,"byte_end":147437,"line_start":413,"line_end":413,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147442,"byte_end":147445,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ By default, this returns a value indicating that the subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147450,"byte_end":147517,"line_start":415,"line_end":415,"column_start":5,"column_end":72}},{"value":"/ does **not** track what span is current. If the subscriber does not","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147522,"byte_end":147593,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ implement a current span, it should not override this method.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147598,"byte_end":147663,"line_start":417,"line_end":417,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147668,"byte_end":147671,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [`Current::new`]: ../span/struct.Current.html#tymethod.new","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147676,"byte_end":147738,"line_start":419,"line_end":419,"column_start":5,"column_end":67}},{"value":"/ [`Current::none`]: ../span/struct.Current.html#tymethod.none","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147743,"byte_end":147807,"line_start":420,"line_end":420,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149347,"byte_end":149359,"line_start":452,"line_end":452,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"::subscriber::Subscriber::downcast_raw","value":"pub unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" If `self` is the same type as the provided `TypeId`, returns an untyped\n `*const` pointer to that type. Otherwise, returns `None`.","sig":null,"attributes":[{"value":"/ If `self` is the same type as the provided `TypeId`, returns an untyped","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":147979,"byte_end":148054,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/ `*const` pointer to that type. Otherwise, returns `None`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148059,"byte_end":148120,"line_start":428,"line_end":428,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148125,"byte_end":148128,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ If you wish to downcast a `Subscriber`, it is strongly advised to use","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148133,"byte_end":148206,"line_start":430,"line_end":430,"column_start":5,"column_end":78}},{"value":"/ the safe API provided by [`downcast_ref`] instead.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148211,"byte_end":148265,"line_start":431,"line_end":431,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148270,"byte_end":148273,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This API is required for `downcast_raw` to be a trait method; a method","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148278,"byte_end":148352,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/ signature like [`downcast_ref`] (with a generic type parameter) is not","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148357,"byte_end":148431,"line_start":434,"line_end":434,"column_start":5,"column_end":79}},{"value":"/ object-safe, and thus cannot be a trait method for `Subscriber`. This","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148436,"byte_end":148509,"line_start":435,"line_end":435,"column_start":5,"column_end":78}},{"value":"/ means that if we only exposed `downcast_ref`, `Subscriber`","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148514,"byte_end":148576,"line_start":436,"line_end":436,"column_start":5,"column_end":67}},{"value":"/ implementations could not override the downcasting behavior","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148581,"byte_end":148644,"line_start":437,"line_end":437,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148649,"byte_end":148652,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ This method may be overridden by \"fan out\" or \"chained\" subscriber","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148657,"byte_end":148727,"line_start":439,"line_end":439,"column_start":5,"column_end":75}},{"value":"/ implementations which consist of multiple composed types. Such","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148732,"byte_end":148798,"line_start":440,"line_end":440,"column_start":5,"column_end":71}},{"value":"/ subscribers might allow `downcast_raw` by returning references to those","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148803,"byte_end":148878,"line_start":441,"line_end":441,"column_start":5,"column_end":80}},{"value":"/ component if they contain components with the given `TypeId`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148883,"byte_end":148948,"line_start":442,"line_end":442,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148953,"byte_end":148956,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148961,"byte_end":148973,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148978,"byte_end":148981,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ The [`downcast_ref`] method expects that the pointer returned by","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":148986,"byte_end":149054,"line_start":446,"line_end":446,"column_start":5,"column_end":73}},{"value":"/ `downcast_raw` is non-null and points to a valid instance of the type","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149059,"byte_end":149132,"line_start":447,"line_end":447,"column_start":5,"column_end":78}},{"value":"/ with the provided `TypeId`. Failure to ensure this will result in","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149137,"byte_end":149206,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"/ undefined behaviour, so implementing `downcast_raw` is unsafe.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149211,"byte_end":149277,"line_start":449,"line_end":449,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149282,"byte_end":149285,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ [`downcast_ref`]: #method.downcast_ref","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149290,"byte_end":149332,"line_start":451,"line_end":451,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149648,"byte_end":149650,"line_start":463,"line_end":463,"column_start":12,"column_end":14},"name":"is","qualname":"<Subscriber>::is","value":"pub fn is<T: Any>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Subscriber` is the same type as `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Subscriber` is the same type as `T`.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149572,"byte_end":149636,"line_start":462,"line_end":462,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149848,"byte_end":149860,"line_start":469,"line_end":469,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Subscriber>::downcast_ref","value":"pub fn downcast_ref<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to this `Subscriber` value if it is of type `T`,\n or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to this `Subscriber` value if it is of type `T`,","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149730,"byte_end":149805,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ or `None` if it isn't.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":149810,"byte_end":149836,"line_start":468,"line_end":468,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1046},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150506,"byte_end":150514,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"Interest","qualname":"::subscriber::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates a [`Subscriber`]'s interest in a particular callsite.","sig":null,"attributes":[{"value":"/ Indicates a [`Subscriber`]'s interest in a particular callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150118,"byte_end":150185,"line_start":481,"line_end":481,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150186,"byte_end":150189,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s return an `Interest` from their [`register_callsite`] methods","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150190,"byte_end":150269,"line_start":483,"line_end":483,"column_start":1,"column_end":80}},{"value":"/ in order to determine whether that span should be enabled or disabled.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150270,"byte_end":150344,"line_start":484,"line_end":484,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150345,"byte_end":150348,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: ../trait.Subscriber.html","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150349,"byte_end":150393,"line_start":486,"line_end":486,"column_start":1,"column_end":45}},{"value":"/ [`register_callsite`]: ../trait.Subscriber.html#method.register_callsite","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150394,"byte_end":150470,"line_start":487,"line_end":487,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150993,"byte_end":150998,"line_start":505,"line_end":505,"column_start":12,"column_end":17},"name":"never","qualname":"<Interest>::never","value":"pub fn never() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating that the subscriber is never interested\n in being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating that the subscriber is never interested","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150686,"byte_end":150762,"line_start":499,"line_end":499,"column_start":5,"column_end":81}},{"value":"/ in being notified about a callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150767,"byte_end":150806,"line_start":500,"line_end":500,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150811,"byte_end":150814,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ If all active subscribers are `never()` interested in a callsite, it will","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150819,"byte_end":150896,"line_start":502,"line_end":502,"column_start":5,"column_end":82}},{"value":"/ be completely disabled unless a new subscriber becomes active.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150901,"byte_end":150967,"line_start":503,"line_end":503,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150972,"byte_end":150981,"line_start":504,"line_end":504,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151527,"byte_end":151536,"line_start":517,"line_end":517,"column_start":12,"column_end":21},"name":"sometimes","qualname":"<Interest>::sometimes","value":"pub fn sometimes() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating the subscriber is sometimes interested\n in being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating the subscriber is sometimes interested","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151060,"byte_end":151135,"line_start":509,"line_end":509,"column_start":5,"column_end":80}},{"value":"/ in being notified about a callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151140,"byte_end":151179,"line_start":510,"line_end":510,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151184,"byte_end":151187,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ If all active subscribers are `sometimes` or `never` interested in a","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151192,"byte_end":151264,"line_start":512,"line_end":512,"column_start":5,"column_end":77}},{"value":"/ callsite, the currently active subscriber will be asked to filter that","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151269,"byte_end":151343,"line_start":513,"line_end":513,"column_start":5,"column_end":79}},{"value":"/ callsite every time it creates a span. This will be the case until a new","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151348,"byte_end":151424,"line_start":514,"line_end":514,"column_start":5,"column_end":81}},{"value":"/ subscriber expresses that it is `always` interested in the callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151429,"byte_end":151501,"line_start":515,"line_end":515,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151506,"byte_end":151515,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151892,"byte_end":151898,"line_start":527,"line_end":527,"column_start":12,"column_end":18},"name":"always","qualname":"<Interest>::always","value":"pub fn always() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating the subscriber is always interested in\n being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating the subscriber is always interested in","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151602,"byte_end":151677,"line_start":521,"line_end":521,"column_start":5,"column_end":80}},{"value":"/ being notified about a callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151682,"byte_end":151718,"line_start":522,"line_end":522,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151723,"byte_end":151726,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ If any subscriber expresses that it is `always()` interested in a given","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151731,"byte_end":151806,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/ callsite, then the callsite will always be enabled.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151811,"byte_end":151866,"line_start":525,"line_end":525,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151871,"byte_end":151880,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152090,"byte_end":152098,"line_start":534,"line_end":534,"column_start":12,"column_end":20},"name":"is_never","qualname":"<Interest>::is_never","value":"pub fn is_never(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is never interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is never interested in being notified","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":151961,"byte_end":152035,"line_start":531,"line_end":531,"column_start":5,"column_end":79}},{"value":"/ about this callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152040,"byte_end":152064,"line_start":532,"line_end":532,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152069,"byte_end":152078,"line_start":533,"line_end":533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152306,"byte_end":152318,"line_start":541,"line_end":541,"column_start":12,"column_end":24},"name":"is_sometimes","qualname":"<Interest>::is_sometimes","value":"pub fn is_sometimes(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is sometimes interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is sometimes interested in being notified","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152173,"byte_end":152251,"line_start":538,"line_end":538,"column_start":5,"column_end":83}},{"value":"/ about this callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152256,"byte_end":152280,"line_start":539,"line_end":539,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152285,"byte_end":152294,"line_start":540,"line_end":540,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152527,"byte_end":152536,"line_start":548,"line_end":548,"column_start":12,"column_end":21},"name":"is_always","qualname":"<Interest>::is_always","value":"pub fn is_always(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is always interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is always interested in being notified","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152397,"byte_end":152472,"line_start":545,"line_end":545,"column_start":5,"column_end":80}},{"value":"/ about this callsite.","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152477,"byte_end":152501,"line_start":546,"line_end":546,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":152506,"byte_end":152515,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":624},"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8587,"byte_end":8593,"line_start":278,"line_end":278,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":9162,"byte_end":9170,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13979,"byte_end":13989,"line_start":150,"line_end":150,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":14184,"byte_end":14194,"line_start":159,"line_end":159,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":14219,"byte_end":14229,"line_start":161,"line_end":161,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":14364,"byte_end":14374,"line_start":167,"line_end":167,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26681,"byte_end":26702,"line_start":321,"line_end":321,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26942,"byte_end":26963,"line_start":329,"line_end":329,"column_start":23,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":29489,"byte_end":29497,"line_start":413,"line_end":413,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38923,"byte_end":38931,"line_start":655,"line_end":655,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":39084,"byte_end":39092,"line_start":662,"line_end":662,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":39218,"byte_end":39226,"line_start":668,"line_end":668,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":39413,"byte_end":39425,"line_start":679,"line_end":679,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":40055,"byte_end":40064,"line_start":704,"line_end":704,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":40458,"byte_end":40463,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":41288,"byte_end":41295,"line_start":751,"line_end":751,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":41704,"byte_end":41711,"line_start":768,"line_end":768,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":41874,"byte_end":41886,"line_start":778,"line_end":778,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48415,"byte_end":48420,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61898,"byte_end":61909,"line_start":273,"line_end":273,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":62070,"byte_end":62078,"line_start":279,"line_end":279,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":62243,"byte_end":62244,"line_start":285,"line_end":285,"column_start":19,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":65175,"byte_end":65183,"line_start":399,"line_end":399,"column_start":58,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":65243,"byte_end":65251,"line_start":400,"line_end":400,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":66191,"byte_end":66200,"line_start":436,"line_end":436,"column_start":41,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":66233,"byte_end":66242,"line_start":438,"line_end":438,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":66711,"byte_end":66723,"line_start":450,"line_end":450,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":67602,"byte_end":67614,"line_start":481,"line_end":481,"column_start":49,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":67640,"byte_end":67652,"line_start":483,"line_end":483,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":67855,"byte_end":67867,"line_start":492,"line_end":492,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68016,"byte_end":68028,"line_start":498,"line_end":498,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68222,"byte_end":68232,"line_start":506,"line_end":506,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68270,"byte_end":68280,"line_start":508,"line_end":508,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68459,"byte_end":68469,"line_start":517,"line_end":517,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68612,"byte_end":68617,"line_start":523,"line_end":523,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68636,"byte_end":68641,"line_start":524,"line_end":524,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68747,"byte_end":68752,"line_start":531,"line_end":531,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69258,"byte_end":69263,"line_start":548,"line_end":548,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69385,"byte_end":69390,"line_start":554,"line_end":554,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69472,"byte_end":69477,"line_start":560,"line_end":560,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69607,"byte_end":69612,"line_start":566,"line_end":566,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69631,"byte_end":69636,"line_start":568,"line_end":568,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69800,"byte_end":69805,"line_start":578,"line_end":578,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":70069,"byte_end":70077,"line_start":592,"line_end":592,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":73280,"byte_end":73288,"line_start":691,"line_end":691,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":73530,"byte_end":73538,"line_start":700,"line_end":700,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":73754,"byte_end":73758,"line_start":710,"line_end":710,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":74094,"byte_end":74102,"line_start":726,"line_end":726,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":75647,"byte_end":75655,"line_start":774,"line_end":774,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76074,"byte_end":76082,"line_start":789,"line_end":789,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86660,"byte_end":86668,"line_start":121,"line_end":121,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":89055,"byte_end":89063,"line_start":206,"line_end":206,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90208,"byte_end":90212,"line_start":245,"line_end":245,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90685,"byte_end":90690,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91405,"byte_end":91410,"line_start":288,"line_end":288,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91841,"byte_end":91856,"line_start":302,"line_end":302,"column_start":38,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91878,"byte_end":91883,"line_start":304,"line_end":304,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93465,"byte_end":93476,"line_start":355,"line_end":355,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93599,"byte_end":93610,"line_start":362,"line_end":362,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93727,"byte_end":93733,"line_start":369,"line_end":369,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93842,"byte_end":93853,"line_start":376,"line_end":376,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":99470,"byte_end":99481,"line_start":501,"line_end":501,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":99900,"byte_end":99911,"line_start":514,"line_end":514,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":100405,"byte_end":100416,"line_start":527,"line_end":527,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":101712,"byte_end":101727,"line_start":561,"line_end":561,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":101985,"byte_end":102006,"line_start":570,"line_end":570,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":102308,"byte_end":102329,"line_start":580,"line_end":580,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":106666,"byte_end":106671,"line_start":655,"line_end":655,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":106826,"byte_end":106831,"line_start":662,"line_end":662,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":107450,"byte_end":107455,"line_start":689,"line_end":689,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":107624,"byte_end":107629,"line_start":696,"line_end":696,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":108522,"byte_end":108533,"line_start":731,"line_end":731,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":108682,"byte_end":108693,"line_start":738,"line_end":738,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":109398,"byte_end":109409,"line_start":765,"line_end":765,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":109586,"byte_end":109597,"line_start":772,"line_end":772,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114790,"byte_end":114792,"line_start":61,"line_end":61,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116125,"byte_end":116131,"line_start":101,"line_end":101,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116247,"byte_end":116257,"line_start":109,"line_end":109,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119923,"byte_end":119929,"line_start":219,"line_end":219,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120663,"byte_end":120670,"line_start":245,"line_end":245,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":122966,"byte_end":122972,"line_start":312,"line_end":312,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":123080,"byte_end":123086,"line_start":318,"line_end":318,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":123191,"byte_end":123197,"line_start":324,"line_end":324,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":123397,"byte_end":123403,"line_start":333,"line_end":333,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150671,"byte_end":150679,"line_start":498,"line_end":498,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":153161,"byte_end":153164,"line_start":567,"line_end":567,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":154987,"byte_end":154990,"line_start":644,"line_end":644,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8162,"byte_end":8170,"line_start":255,"line_end":255,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8180,"byte_end":8190,"line_start":256,"line_end":256,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":46}},{"kind":"Mod","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8200,"byte_end":8205,"line_start":257,"line_end":257,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":166}},{"kind":"Mod","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8215,"byte_end":8220,"line_start":258,"line_end":258,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8230,"byte_end":8238,"line_start":259,"line_end":259,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":354}},{"kind":"Mod","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8260,"byte_end":8264,"line_start":261,"line_end":261,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":484}},{"kind":"Mod","span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/lib.rs","byte_start":8297,"byte_end":8307,"line_start":263,"line_end":263,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":540}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":9162,"byte_end":9170,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":23},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":10979,"byte_end":10983,"line_start":77,"line_end":77,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":13979,"byte_end":13989,"line_start":150,"line_end":150,"column_start":20,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":636},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":14184,"byte_end":14194,"line_start":159,"line_end":159,"column_start":13,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":636},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":14219,"byte_end":14229,"line_start":161,"line_end":161,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":636},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/callsite.rs","byte_start":14364,"byte_end":14374,"line_start":167,"line_end":167,"column_start":15,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":636},"to":{"krate":2,"index":7141}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26681,"byte_end":26702,"line_start":321,"line_end":321,"column_start":23,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":654},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":26942,"byte_end":26963,"line_start":329,"line_end":329,"column_start":23,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":654},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":29489,"byte_end":29497,"line_start":413,"line_end":413,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":38923,"byte_end":38931,"line_start":655,"line_end":655,"column_start":18,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":39084,"byte_end":39092,"line_start":662,"line_end":662,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":39218,"byte_end":39226,"line_start":668,"line_end":668,"column_start":21,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":641},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":39413,"byte_end":39425,"line_start":679,"line_end":679,"column_start":21,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":552}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":40055,"byte_end":40064,"line_start":704,"line_end":704,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":40458,"byte_end":40463,"line_start":720,"line_end":720,"column_start":6,"column_end":11},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":41288,"byte_end":41295,"line_start":751,"line_end":751,"column_start":10,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":41704,"byte_end":41711,"line_start":768,"line_end":768,"column_start":19,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/dispatcher.rs","byte_start":41874,"byte_end":41886,"line_start":778,"line_end":778,"column_start":15,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":649},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/event.rs","byte_start":48415,"byte_end":48420,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":60967,"byte_end":60973,"line_start":237,"line_end":237,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":624},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":61898,"byte_end":61909,"line_start":273,"line_end":273,"column_start":29,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":6713},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":62070,"byte_end":62078,"line_start":279,"line_end":279,"column_start":29,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":6794},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":62243,"byte_end":62244,"line_start":285,"line_end":285,"column_start":19,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":228},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":65175,"byte_end":65183,"line_start":399,"line_end":399,"column_start":58,"column_end":66},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":16547},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":65243,"byte_end":65251,"line_start":400,"line_end":400,"column_start":54,"column_end":62},"kind":{"Impl":{"id":42}},"from":{"krate":2,"index":16547},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":66191,"byte_end":66200,"line_start":436,"line_end":436,"column_start":41,"column_end":50},"kind":{"Impl":{"id":45}},"from":{"krate":2,"index":35701},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":66233,"byte_end":66242,"line_start":438,"line_end":438,"column_start":25,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":2,"index":35701},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":66711,"byte_end":66723,"line_start":450,"line_end":450,"column_start":44,"column_end":56},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":259},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":67602,"byte_end":67614,"line_start":481,"line_end":481,"column_start":49,"column_end":61},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":67640,"byte_end":67652,"line_start":483,"line_end":483,"column_start":19,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":686},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":67855,"byte_end":67867,"line_start":492,"line_end":492,"column_start":38,"column_end":50},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68016,"byte_end":68028,"line_start":498,"line_end":498,"column_start":40,"column_end":52},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68222,"byte_end":68232,"line_start":506,"line_end":506,"column_start":47,"column_end":57},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":693},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68270,"byte_end":68280,"line_start":508,"line_end":508,"column_start":31,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":693},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68459,"byte_end":68469,"line_start":517,"line_end":517,"column_start":36,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":693},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68612,"byte_end":68617,"line_start":523,"line_end":523,"column_start":32,"column_end":37},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":671},"to":{"krate":0,"index":624}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68636,"byte_end":68641,"line_start":524,"line_end":524,"column_start":16,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":671},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":68747,"byte_end":68752,"line_start":531,"line_end":531,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69258,"byte_end":69263,"line_start":548,"line_end":548,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69385,"byte_end":69390,"line_start":554,"line_end":554,"column_start":21,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69472,"byte_end":69477,"line_start":560,"line_end":560,"column_start":20,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69607,"byte_end":69612,"line_start":566,"line_end":566,"column_start":13,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69631,"byte_end":69636,"line_start":568,"line_end":568,"column_start":15,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":7141}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":69800,"byte_end":69805,"line_start":578,"line_end":578,"column_start":16,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":70069,"byte_end":70077,"line_start":592,"line_end":592,"column_start":6,"column_end":14},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":73280,"byte_end":73288,"line_start":691,"line_end":691,"column_start":21,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":73530,"byte_end":73538,"line_start":700,"line_end":700,"column_start":23,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":73754,"byte_end":73758,"line_start":710,"line_end":710,"column_start":19,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":74094,"byte_end":74102,"line_start":726,"line_end":726,"column_start":10,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":75647,"byte_end":75655,"line_start":774,"line_end":774,"column_start":25,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76074,"byte_end":76082,"line_start":789,"line_end":789,"column_start":27,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/field.rs","byte_start":76933,"byte_end":76939,"line_start":815,"line_end":815,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1748},"to":{"krate":0,"index":351}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":86660,"byte_end":86668,"line_start":121,"line_end":121,"column_start":10,"column_end":18},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":89055,"byte_end":89063,"line_start":206,"line_end":206,"column_start":25,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90208,"byte_end":90212,"line_start":245,"line_end":245,"column_start":6,"column_end":10},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":90685,"byte_end":90690,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91405,"byte_end":91410,"line_start":288,"line_end":288,"column_start":23,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91841,"byte_end":91856,"line_start":302,"line_end":302,"column_start":38,"column_end":53},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":987},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":91878,"byte_end":91883,"line_start":304,"line_end":304,"column_start":18,"column_end":23},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93465,"byte_end":93476,"line_start":355,"line_end":355,"column_start":22,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93599,"byte_end":93610,"line_start":362,"line_end":362,"column_start":30,"column_end":41},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93727,"byte_end":93733,"line_start":369,"line_end":369,"column_start":28,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":2,"index":34651},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":93842,"byte_end":93853,"line_start":376,"line_end":376,"column_start":6,"column_end":17},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":99470,"byte_end":99481,"line_start":501,"line_end":501,"column_start":23,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":99900,"byte_end":99911,"line_start":514,"line_end":514,"column_start":21,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":100405,"byte_end":100416,"line_start":527,"line_end":527,"column_start":18,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":9021}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":101712,"byte_end":101727,"line_start":561,"line_end":561,"column_start":23,"column_end":38},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":987},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":101985,"byte_end":102006,"line_start":570,"line_end":570,"column_start":23,"column_end":44},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":935},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":102308,"byte_end":102329,"line_start":580,"line_end":580,"column_start":28,"column_end":49},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":935},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":106666,"byte_end":106671,"line_start":655,"line_end":655,"column_start":33,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":106826,"byte_end":106831,"line_start":662,"line_end":662,"column_start":21,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":1841}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":107450,"byte_end":107455,"line_start":689,"line_end":689,"column_start":14,"column_end":19},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":107624,"byte_end":107629,"line_start":696,"line_end":696,"column_start":34,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":1841}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":108522,"byte_end":108533,"line_start":731,"line_end":731,"column_start":27,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":108682,"byte_end":108693,"line_start":738,"line_end":738,"column_start":21,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":1841}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":109398,"byte_end":109409,"line_start":765,"line_end":765,"column_start":14,"column_end":25},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/metadata.rs","byte_start":109586,"byte_end":109597,"line_start":772,"line_end":772,"column_start":28,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":1841}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":114790,"byte_end":114792,"line_start":61,"line_end":61,"column_start":6,"column_end":8},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116125,"byte_end":116131,"line_start":101,"line_end":101,"column_start":27,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":2,"index":34651},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":116247,"byte_end":116257,"line_start":109,"line_end":109,"column_start":10,"column_end":20},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":119923,"byte_end":119929,"line_start":219,"line_end":219,"column_start":10,"column_end":16},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":120663,"byte_end":120670,"line_start":245,"line_end":245,"column_start":6,"column_end":13},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":122966,"byte_end":122972,"line_start":312,"line_end":312,"column_start":32,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":2,"index":34651},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":123080,"byte_end":123086,"line_start":318,"line_end":318,"column_start":32,"column_end":38},"kind":{"Impl":{"id":102}},"from":{"krate":2,"index":34651},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":123191,"byte_end":123197,"line_start":324,"line_end":324,"column_start":24,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":2,"index":34651},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/span.rs","byte_start":123397,"byte_end":123403,"line_start":333,"line_end":333,"column_start":32,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":2,"index":34651},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":150671,"byte_end":150679,"line_start":498,"line_end":498,"column_start":6,"column_end":14},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":153161,"byte_end":153164,"line_start":567,"line_end":567,"column_start":21,"column_end":24},"kind":{"Impl":{"id":106}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":552}},{"span":{"file_name":"/home/masterdubs/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.18/src/subscriber.rs","byte_start":154987,"byte_end":154990,"line_start":644,"line_end":644,"column_start":21,"column_end":24},"kind":{"Impl":{"id":107}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":552}}]}